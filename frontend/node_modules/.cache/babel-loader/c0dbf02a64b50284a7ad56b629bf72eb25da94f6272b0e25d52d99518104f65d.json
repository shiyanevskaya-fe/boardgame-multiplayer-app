{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayingCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/PlayingCards.css\";\nimport axios from 'axios';\nimport PlayingSpecialCards from \"./PlayingSpecialCards.js\";\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst PlayingCards = ({\n  roomCode,\n  card,\n  action,\n  setSelectedCard\n}) => {\n  _s();\n  const player = JSON.parse(localStorage.getItem('player'));\n  const [players, setPlayers] = useState([]);\n  const [isSpecial, setIsSpecial] = useState(false);\n  const [playerIdWhereKill, setPlayerIdWhereKill] = useState();\n  const [peasantCardsOptions, setPeasantCardsOptions] = useState([]);\n  const [playerIdToMovePeasantCards, setPlayerIdToMovePeasantCards] = useState();\n  const [showPeasantCardsModal, setShowPeasantCardsModal] = useState(false);\n  const [selectedCardsRadio, setSelectedCardsRadio] = useState({});\n  const [playerIdToMove, setPlayerIdToMove] = useState();\n  const [nextPlayer, setNextPlayer] = useState([]);\n  const [prevPlayer, setPrevPlayer] = useState([]);\n  const [cardsGroupNeighbors, setCardsGroupNeighbors] = useState();\n  const [showCardsGroupNeighborsModal, setShowCardsGroupNeighborsModal] = useState(false);\n  const [cardDescription, setCardDescription] = useState();\n  const [cardsWomenNeighbors, setCardsWomenNeighbors] = useState([]);\n  const [showCardsWomenNeighborsModal, setShowCardsWomenNeighborsModal] = useState(false);\n  const [modalAlertIsOpen, setmodalAlertIsOpen] = useState(false);\n  const [cardIdPlay, setCardIdPlay] = useState();\n  const [message, setMessage] = useState('');\n  const [data, setData] = useState([]);\n  const [showModalWithOneChoise, setShowModalWithOneChoise] = useState(false);\n  const [handleName, setHandleName] = useState('');\n  const handleActions = {\n    handleCureEpidemic: id => {\n      handleCureEpidemic(id);\n      setShowModalWithOneChoise(false);\n    },\n    handleStealCrusadePoints: id => {\n      handleStealCrusadePoints(id);\n      setShowModalWithOneChoise(false);\n    },\n    handleChoiseCourtKill: id => {\n      handleChoiseCourtKill(id);\n      setShowModalWithOneChoise(false);\n    },\n    handleResetCard: id => {\n      handleResetCard(id);\n      setShowModalWithOneChoise(false);\n    },\n    handleKillCourt: id => {\n      handleKillCourt(id);\n      setShowModalWithOneChoise(false);\n    },\n    handleDeleteCardAndGetCrusadePoints: id => {\n      handleDeleteCardAndGetCrusadePoints(id);\n      setShowModalWithOneChoise(false);\n    },\n    handleSendCourtCrusaderNeighbor: item => {\n      handleSendCourtCrusaderNeighbor(item.player_id, item.card_id);\n      setShowModalWithOneChoise(false);\n    },\n    handleMoveCard: item => {\n      const playerId = item.other_player_id || item.player_id;\n      const cardId = item.id_card_in_deck || item.card_id;\n      handleMoveCard(playerId, cardId);\n      setShowModalWithOneChoise(false);\n    },\n    handleChoiseCardToMove: item => {\n      handleChoiseCardToMove(item.value);\n      setShowModalWithOneChoise(false);\n    }\n  };\n  const fetchPlayers = async () => {\n    try {\n      const response_players = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/`);\n      setPlayers(response_players.data);\n    } catch (error) {\n      console.error(\"Ошибка получения пользователей:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPlayers();\n    setCardDescription(card.card_data.description);\n  }, [roomCode, player.id]);\n  useEffect(() => {\n    if (card.card_group_in_deck === \"universal\") {\n      setIsSpecial(true);\n    }\n  }, [card]);\n  const handleClickItem = async pl => {\n    if (card.card_data.description === \"require_discard_to_settle\" && pl.id !== player.id || card.card_data.description !== \"require_discard_to_settle\") {\n      try {\n        const responce = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`, {\n          'player_id': pl.id,\n          'id_card_in_deck': card.id\n        });\n        if (responce.data.epidemics) {\n          setMessage(responce.data.message);\n          setData(responce.data.epidemics);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          return;\n        }\n        if (responce.data.court_cards) {\n          setMessage(responce.data.message);\n          setData(responce.data.court_cards);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setPlayerIdWhereKill(responce.data.player_id_where_kill);\n          return;\n        }\n        if (responce.data.monks) {\n          setMessage(responce.data.message);\n          setData(responce.data.monks);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.commoner_crusader_cards) {\n          setMessage(responce.data.message);\n          setData(responce.data.commoner_crusader_cards);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.available_groups) {\n          setMessage(responce.data.message);\n          setData(responce.data.available_groups);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setNextPlayer(responce.data.neighbors.next_player);\n          setPrevPlayer(responce.data.neighbors.prev_player);\n          return;\n        }\n        if (responce.data.players_with_court) {\n          setMessage(responce.data.message);\n          setData(responce.data.players_with_court);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          return;\n        }\n        if (responce.data.cards_women_neighbors) {\n          setCardsWomenNeighbors(responce.data.cards_women_neighbors);\n          setShowCardsWomenNeighborsModal(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.all_played_cards) {\n          setMessage(responce.data.message);\n          setData(responce.data.all_played_cards);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setPlayerIdWhereKill(responce.data.player_id);\n          return;\n        }\n        if (responce.data.players_have_crusade_points) {\n          setMessage(responce.data.message);\n          setData(responce.data.players_have_crusade_points);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setPlayerIdToMove(responce.data.player);\n          return;\n        }\n        if (responce.data.court_crusader_neighbor) {\n          setMessage(responce.data.message);\n          setData(responce.data.court_crusader_neighbor);\n          setHandleName(responce.data.handle);\n          setShowModalWithOneChoise(true);\n          setPlayerIdToMove(responce.data.player_id);\n          return;\n        }\n      } catch (error) {\n        console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\n      }\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n      action();\n      setSelectedCard(null);\n    } else if (card.card_data.description === \"require_discard_to_settle\" && pl.id === player.id) {\n      try {\n        const response = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/require-discard-to-settle/`, {\n          'player_id': player.id,\n          'card_id': card.id\n        });\n        if (!response.data.can_play) {\n          setmodalAlertIsOpen(true);\n          return;\n        } else if (response.data.can_play && response.data.cards_hand) {\n          setMessage(response.data.message);\n          setData(response.data.cards_hand);\n          setHandleName(response.data.handle);\n          setShowModalWithOneChoise(true);\n          return;\n        }\n      } catch (error) {\n        console.error(\"Ошибка при розыгрыше карты в своем городе\", error);\n      }\n    }\n  };\n  const handleCureEpidemic = async epidemicId => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/cure-epidemic/`, {\n        epidemic_id: epidemicId\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при лечении эпидемии:\", error);\n    }\n  };\n  const handleKillCourt = async courtCardId => {\n    try {\n      const responce = await axios.post(`\n                http://192.168.1.68:8000/api/rooms/${roomCode}/kill-court/`, {\n        'player_id_where_kill': playerIdWhereKill,\n        'id_card_in_deck': courtCardId,\n        'card_description': cardDescription\n      });\n      if (responce.data.next_player && responce.data.prev_player) {\n        setPeasantCardsOptions([{\n          player_id: responce.data.next_player.id,\n          city_name: responce.data.next_player.city_name,\n          cards: responce.data.next_player.peasant_cards\n        }, {\n          player_id: responce.data.prev_player.id,\n          city_name: responce.data.prev_player.city_name,\n          cards: responce.data.prev_player.peasant_cards\n        }]);\n        setPlayerIdToMovePeasantCards(responce.data.player_id_to_move);\n        setShowPeasantCardsModal(true);\n        return;\n      } else {\n        try {\n          await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n            data: {\n              'player_id': player.id,\n              'id_card_in_deck': card.id\n            }\n          });\n          action();\n          setSelectedCard(null);\n        } catch (error) {\n          console.error(\"Ошибка при удалении карты с руки: \", error);\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты придворного: \", error);\n    }\n  };\n  const handleMovePeasantCard = async (peasantCardId, fromPlayerId) => {\n    setShowPeasantCardsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-peasant-card/`, {\n        'player_id_from_move': fromPlayerId,\n        'player_id_to_move': playerIdToMovePeasantCards,\n        'id_card_in_deck': peasantCardId\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n        action();\n        setSelectedCard(null);\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при перемещении карты простолюдина: \", error);\n    }\n  };\n  const handleMoveCard = async (player_id_from_move, card_id) => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-card/`, {\n        'player_id_from_move': player_id_from_move,\n        'player_id_to_move': playerIdToMove,\n        'card_id': card_id\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n        action();\n        setSelectedCard(null);\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при перещении карты Монах: \", error);\n    }\n  };\n  const handleChoiseCardToMove = async group => {\n    const response = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/choise-card-to-move/`, {\n      'next_player_id': nextPlayer.player_id,\n      'prev_player_id': prevPlayer.player_id,\n      'card_group': group\n    });\n    if (response.data.cards_group_neighbors) {\n      setCardsGroupNeighbors(response.data.cards_group_neighbors);\n      setShowCardsGroupNeighborsModal(true);\n    }\n  };\n  const handleSwapCards = async (next_player_id, next_player_card_id, prev_player_id, prev_player_card_id) => {\n    await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/swap-cards/`, {\n      'next_player_id': next_player_id,\n      'next_player_card_id': next_player_card_id,\n      'prev_player_id': prev_player_id,\n      'prev_player_card_id': prev_player_card_id\n    });\n    try {\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты с руки: \", error);\n    }\n  };\n  const handleChoiseCourtKill = async player_id => {\n    const responce = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/choise-court-kill/`, {\n      'player_id': player_id\n    });\n    if (responce.data.court_cards) {\n      setMessage(responce.data.message);\n      setData(responce.data.court_cards);\n      setHandleName(responce.data.handle);\n      setShowModalWithOneChoise(true);\n      setPlayerIdWhereKill(responce.data.player_id_where_kill);\n      return;\n    }\n  };\n  const handleDeleteCardAndGetCrusadePoints = async card_id => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/delete-card-and-get-crusade-points/`, {\n        'player_id': playerIdWhereKill,\n        'card_id': card_id\n      });\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты и получении ко: \", error);\n    }\n  };\n  const handleStealCrusadePoints = async pl_id => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/steal-crusade-points/`, {\n        'player_id_from': pl_id,\n        'player_id_to': playerIdToMove\n      });\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при воровстве ко: \", error);\n    }\n  };\n  const handleSendCourtCrusaderNeighbor = async (player_id_from, card_id) => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/send-court-crusade/`, {\n        'player_id_from': player_id_from,\n        'card_id': card_id,\n        'player_id_to': playerIdToMove\n      });\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при отправке придворного в крестовый поход: \", error);\n    }\n  };\n  const handleResetCard = async card_id => {\n    await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/reset-card/play-require-discard-to-settle/`, {\n      'card_id': card_id,\n      'player_id': player.id,\n      'card_id_play': cardIdPlay\n    });\n    action();\n    setSelectedCard(null);\n  };\n  if (isSpecial) {\n    return /*#__PURE__*/_jsxDEV(PlayingSpecialCards, {\n      roomCode: roomCode,\n      card: card,\n      setIsSpecial: setIsSpecial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalAlertIsOpen,\n      onRequestClose: () => setmodalAlertIsOpen(false),\n      contentLabel: \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435\",\n      className: \"modal\",\n      overlayClassName: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0443 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u0440\\u0430\\u0437\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C \\u0432 \\u0441\\u0432\\u043E\\u0435\\u043C \\u0433\\u043E\\u0440\\u043E\\u0434\\u0435, \\u0442\\u0430\\u043A \\u043A\\u0430\\u043A \\u043D\\u0435\\u0442 \\u043A\\u0430\\u0440\\u0442 \\u0434\\u043B\\u044F \\u0441\\u0431\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModalWithOneChoise,\n      onRequestClose: () => setShowModalWithOneChoise(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          var _handleActions$handle;\n          return (_handleActions$handle = handleActions[handleName]) === null || _handleActions$handle === void 0 ? void 0 : _handleActions$handle.call(handleActions, item);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.card_name || item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this)\n      }, item.card_id || item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showPeasantCardsModal,\n      onRequestClose: () => setShowPeasantCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u043C\\u0443 \\u043F\\u0440\\u043E\\u0441\\u0442\\u043E\\u043B\\u044E\\u0434\\u0438\\u043D\\u0443 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 13\n      }, this), peasantCardsOptions.map(source => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", source.city_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 21\n        }, this), source.cards.map(card => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: source.player_id,\n            value: card.id,\n            onChange: () => {\n              setSelectedCardsRadio(prev => ({\n                ...prev,\n                [source.player_id]: card.id\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 29\n          }, this), card.name]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\n            handleMovePeasantCard(card_id, player_id);\n          });\n          setShowPeasantCardsModal(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCardsGroupNeighborsModal,\n      onRequestClose: () => setShowCardsGroupNeighborsModal(false),\n      children: cardsGroupNeighbors ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u0439 \\u043A\\u0430\\u0440\\u0442\\u0435 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsGroupNeighbors.next_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 25\n          }, this), cardsGroupNeighbors.next_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsGroupNeighbors.next_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsGroupNeighbors.next_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 33\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsGroupNeighbors.prev_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 25\n          }, this), cardsGroupNeighbors.prev_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsGroupNeighbors.prev_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsGroupNeighbors.prev_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 33\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowCardsGroupNeighborsModal(false);\n            const next_player_id = cardsGroupNeighbors.next_player.player_id;\n            const prev_player_id = cardsGroupNeighbors.prev_player.player_id;\n            const next_player_card_id = selectedCardsRadio[next_player_id];\n            const prev_player_card_id = selectedCardsRadio[prev_player_id];\n            if (next_player_id && prev_player_id && next_player_card_id && prev_player_card_id) {\n              handleSwapCards(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id);\n            } else {\n              alert(`next_player_id= ${next_player_id}, prev_player_id=${prev_player_id}, next_player_card_id=${next_player_card_id}, prev_player_card_id=${prev_player_card_id}`);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u043E\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u0430\\u043C\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCardsWomenNeighborsModal,\n      onRequestClose: () => setShowCardsWomenNeighborsModal(false),\n      children: cardsWomenNeighbors && cardsWomenNeighbors.next_player && cardsWomenNeighbors.prev_player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u0439 \\u0436\\u0435\\u043D\\u0449\\u0438\\u043D\\u0435 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsWomenNeighbors.next_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 17\n          }, this), cardsWomenNeighbors.next_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsWomenNeighbors.next_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsWomenNeighbors.next_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 21\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsWomenNeighbors.prev_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 17\n          }, this), cardsWomenNeighbors.prev_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsWomenNeighbors.prev_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsWomenNeighbors.prev_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 21\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\n              handleMoveCard(player_id, card_id);\n            });\n            setShowPeasantCardsModal(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 60\n        }, this), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-players\",\n        children: card.card_data.play_only_in_own_city ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-player\",\n          onClick: () => {\n            handleClickItem(player);\n          },\n          children: player.city_name\n        }, player.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 21\n        }, this) : players.length > 0 ? players.map((value, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-player\",\n          onClick: () => {\n            handleClickItem(value);\n          },\n          children: value.city_name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PlayingCards, \"lX3nrB7K4yOKo4NoAhm/VKhcWYY=\");\n_c = PlayingCards;\nexport default PlayingCards;\nvar _c;\n$RefreshReg$(_c, \"PlayingCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","PlayingSpecialCards","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","PlayingCards","roomCode","card","action","setSelectedCard","_s","player","JSON","parse","localStorage","getItem","players","setPlayers","isSpecial","setIsSpecial","playerIdWhereKill","setPlayerIdWhereKill","peasantCardsOptions","setPeasantCardsOptions","playerIdToMovePeasantCards","setPlayerIdToMovePeasantCards","showPeasantCardsModal","setShowPeasantCardsModal","selectedCardsRadio","setSelectedCardsRadio","playerIdToMove","setPlayerIdToMove","nextPlayer","setNextPlayer","prevPlayer","setPrevPlayer","cardsGroupNeighbors","setCardsGroupNeighbors","showCardsGroupNeighborsModal","setShowCardsGroupNeighborsModal","cardDescription","setCardDescription","cardsWomenNeighbors","setCardsWomenNeighbors","showCardsWomenNeighborsModal","setShowCardsWomenNeighborsModal","modalAlertIsOpen","setmodalAlertIsOpen","cardIdPlay","setCardIdPlay","message","setMessage","data","setData","showModalWithOneChoise","setShowModalWithOneChoise","handleName","setHandleName","handleActions","handleCureEpidemic","id","handleStealCrusadePoints","handleChoiseCourtKill","handleResetCard","handleKillCourt","handleDeleteCardAndGetCrusadePoints","handleSendCourtCrusaderNeighbor","item","player_id","card_id","handleMoveCard","playerId","other_player_id","cardId","id_card_in_deck","handleChoiseCardToMove","value","fetchPlayers","response_players","get","error","console","card_data","description","card_group_in_deck","handleClickItem","pl","responce","post","epidemics","handle","court_cards","player_id_where_kill","monks","player_id_to_move","commoner_crusader_cards","available_groups","neighbors","next_player","prev_player","players_with_court","cards_women_neighbors","all_played_cards","players_have_crusade_points","court_crusader_neighbor","delete","response","can_play","cards_hand","epidemicId","epidemic_id","courtCardId","city_name","cards","peasant_cards","handleMovePeasantCard","peasantCardId","fromPlayerId","player_id_from_move","group","cards_group_neighbors","handleSwapCards","next_player_id","next_player_card_id","prev_player_id","prev_player_card_id","pl_id","player_id_from","fileName","_jsxFileName","lineNumber","columnNumber","children","isOpen","onRequestClose","contentLabel","className","overlayClassName","map","onClick","_handleActions$handle","call","card_name","name","source","type","onChange","prev","Object","entries","forEach","player_city_name","c","alert","play_only_in_own_city","length","i","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayingCards.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"../styles/PlayingCards.css\";\r\nimport axios from 'axios';\r\nimport PlayingSpecialCards from \"./PlayingSpecialCards.js\";\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PlayingCards = ({roomCode, card, action, setSelectedCard}) => {\r\n    const player = JSON.parse(localStorage.getItem('player'));\r\n\r\n    const [players, setPlayers] = useState([]);\r\n    const [isSpecial, setIsSpecial] = useState(false);\r\n\r\n\r\n    const [playerIdWhereKill, setPlayerIdWhereKill] = useState();\r\n\r\n    const [peasantCardsOptions, setPeasantCardsOptions] = useState([]);\r\n    const [playerIdToMovePeasantCards, setPlayerIdToMovePeasantCards] = useState();\r\n    const [showPeasantCardsModal, setShowPeasantCardsModal] = useState(false);\r\n    const [selectedCardsRadio, setSelectedCardsRadio] = useState({});\r\n\r\n    const [playerIdToMove, setPlayerIdToMove] = useState();\r\n    \r\n    const [nextPlayer, setNextPlayer] = useState([]);\r\n    const [prevPlayer, setPrevPlayer] = useState([]);\r\n\r\n    const [cardsGroupNeighbors, setCardsGroupNeighbors] = useState();\r\n    const [showCardsGroupNeighborsModal, setShowCardsGroupNeighborsModal] = useState(false);\r\n\r\n\r\n    const [cardDescription, setCardDescription] = useState();\r\n\r\n    const [cardsWomenNeighbors, setCardsWomenNeighbors] = useState([]);\r\n    const [showCardsWomenNeighborsModal, setShowCardsWomenNeighborsModal] = useState(false);\r\n\r\n    const [modalAlertIsOpen, setmodalAlertIsOpen] = useState(false);\r\n\r\n    const [cardIdPlay, setCardIdPlay] = useState();\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [showModalWithOneChoise, setShowModalWithOneChoise] = useState(false);\r\n    const [handleName, setHandleName] = useState('');\r\n\r\n    \r\n    const handleActions = {\r\n        handleCureEpidemic: (id) => {\r\n            handleCureEpidemic(id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleStealCrusadePoints: (id) => {\r\n            handleStealCrusadePoints(id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleChoiseCourtKill: (id) => {\r\n            handleChoiseCourtKill(id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleResetCard: (id) => {\r\n            handleResetCard(id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleKillCourt: (id) => {\r\n            handleKillCourt(id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleDeleteCardAndGetCrusadePoints: (id) => {\r\n            handleDeleteCardAndGetCrusadePoints(id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleSendCourtCrusaderNeighbor: (item) => {\r\n            handleSendCourtCrusaderNeighbor(item.player_id, item.card_id);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleMoveCard: (item) => {\r\n            const playerId = item.other_player_id || item.player_id;\r\n            const cardId = item.id_card_in_deck || item.card_id;\r\n\r\n            handleMoveCard(playerId, cardId);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n        handleChoiseCardToMove: (item) => {\r\n            handleChoiseCardToMove(item.value);\r\n            setShowModalWithOneChoise(false);\r\n        },\r\n    };\r\n\r\n\r\n    const fetchPlayers = async() => {\r\n        try {\r\n            const response_players = await axios.get(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/`\r\n            );\r\n\r\n            setPlayers(response_players.data);\r\n        } catch(error){\r\n            console.error(\"Ошибка получения пользователей:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n        setCardDescription(card.card_data.description);\r\n    }, [roomCode, player.id]);\r\n\r\n    useEffect(() => {\r\n        if (card.card_group_in_deck === \"universal\") {\r\n            setIsSpecial(true);\r\n        }\r\n    }, [card]);\r\n\r\n    const handleClickItem = async(pl) => {\r\n        if((card.card_data.description === \"require_discard_to_settle\" && pl.id !== player.id) || (card.card_data.description !== \"require_discard_to_settle\")){\r\n            try {\r\n                const responce = await axios.post(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`,{\r\n                        'player_id': pl.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                );\r\n\r\n                if(responce.data.epidemics){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.epidemics);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.court_cards){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.court_cards);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    setPlayerIdWhereKill(responce.data.player_id_where_kill);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.monks){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.monks);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.commoner_crusader_cards){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.commoner_crusader_cards);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.available_groups){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.available_groups);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    setNextPlayer(responce.data.neighbors.next_player);\r\n                    setPrevPlayer(responce.data.neighbors.prev_player);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.players_with_court){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.players_with_court);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.cards_women_neighbors){\r\n                    setCardsWomenNeighbors(responce.data.cards_women_neighbors);\r\n                    setShowCardsWomenNeighborsModal(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.all_played_cards){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.all_played_cards);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n\r\n                    setPlayerIdWhereKill(responce.data.player_id);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.players_have_crusade_points){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.players_have_crusade_points);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n\r\n                    setPlayerIdToMove(responce.data.player);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.court_crusader_neighbor){\r\n                    setMessage(responce.data.message);\r\n                    setData(responce.data.court_crusader_neighbor);\r\n                    setHandleName(responce.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    setPlayerIdToMove(responce.data.player_id);\r\n                    return;\r\n                }\r\n            } catch(error){\r\n                console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\r\n            }\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n            action();\r\n            setSelectedCard(null);\r\n        }\r\n        else if(card.card_data.description === \"require_discard_to_settle\" && pl.id === player.id){\r\n            try{\r\n                const response = await axios.post(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/require-discard-to-settle/`,\r\n                    {\r\n                        'player_id': player.id,\r\n                        'card_id': card.id\r\n                    }\r\n                );\r\n                if(!response.data.can_play){\r\n                    setmodalAlertIsOpen(true);\r\n                    return;\r\n                }\r\n                else if(response.data.can_play && response.data.cards_hand){\r\n                    setMessage(response.data.message);\r\n                    setData(response.data.cards_hand);\r\n                    setHandleName(response.data.handle);\r\n                    setShowModalWithOneChoise(true);\r\n                    return;\r\n                }\r\n            } catch(error){\r\n                console.error(\"Ошибка при розыгрыше карты в своем городе\",error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCureEpidemic = async (epidemicId) => {\r\n        try {\r\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/cure-epidemic/`, {\r\n                epidemic_id: epidemicId,\r\n            });\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n            \r\n            action();\r\n            setSelectedCard(null);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при лечении эпидемии:\", error);\r\n        }\r\n    };\r\n\r\n    const handleKillCourt = async (courtCardId) => {\r\n        try{\r\n            const responce = await axios.post(`\r\n                http://192.168.1.68:8000/api/rooms/${roomCode}/kill-court/`, \r\n                {\r\n                    'player_id_where_kill': playerIdWhereKill,\r\n                    'id_card_in_deck': courtCardId,\r\n                    'card_description': cardDescription,\r\n                }\r\n            );\r\n\r\n            if(responce.data.next_player && responce.data.prev_player){\r\n                setPeasantCardsOptions([\r\n                    {\r\n                        player_id: responce.data.next_player.id,\r\n                        city_name: responce.data.next_player.city_name,\r\n                        cards: responce.data.next_player.peasant_cards\r\n                    },\r\n                    {\r\n                        player_id: responce.data.prev_player.id,\r\n                        city_name: responce.data.prev_player.city_name,\r\n                        cards: responce.data.prev_player.peasant_cards\r\n                    }\r\n                ]);\r\n                setPlayerIdToMovePeasantCards(responce.data.player_id_to_move);\r\n                setShowPeasantCardsModal(true);\r\n                return;\r\n            }\r\n            else{\r\n                try {\r\n                    await axios.delete(\r\n                        `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                            data: {\r\n                                'player_id': player.id,\r\n                                'id_card_in_deck': card.id,\r\n                            }\r\n                            \r\n                        }\r\n                    );\r\n\r\n                    action();\r\n                    setSelectedCard(null);\r\n                } catch(error){\r\n                    console.error(\"Ошибка при удалении карты с руки: \", error);\r\n                }\r\n            }\r\n        }catch(error){\r\n            console.error(\"Ошибка при удалении карты придворного: \", error);\r\n        }\r\n    };\r\n\r\n    const handleMovePeasantCard = async (peasantCardId, fromPlayerId) => {\r\n        setShowPeasantCardsModal(false);\r\n\r\n        try{\r\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-peasant-card/`, {\r\n                'player_id_from_move': fromPlayerId,\r\n                'player_id_to_move': playerIdToMovePeasantCards,\r\n                'id_card_in_deck': peasantCardId,\r\n            });\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n\r\n                action();\r\n                setSelectedCard(null);\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n\r\n        } catch(error){\r\n            console.error(\"Ошибка при перемещении карты простолюдина: \", error);\r\n        }\r\n    };\r\n\r\n    const handleMoveCard = async(player_id_from_move, card_id) => {\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/move-card/`,\r\n                {\r\n                    'player_id_from_move': player_id_from_move,\r\n                    'player_id_to_move': playerIdToMove,\r\n                    'card_id': card_id\r\n                }\r\n            );\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n\r\n                action();\r\n                setSelectedCard(null);\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n        }catch(error){\r\n            console.error(\"Ошибка при перещении карты Монах: \", error);\r\n        }\r\n    };\r\n\r\n    const handleChoiseCardToMove = async(group) => {        \r\n        const response = await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/choise-card-to-move/`,\r\n            {\r\n                'next_player_id': nextPlayer.player_id,\r\n                'prev_player_id': prevPlayer.player_id,\r\n                'card_group': group\r\n            }\r\n        );\r\n\r\n        if(response.data.cards_group_neighbors){\r\n            setCardsGroupNeighbors(response.data.cards_group_neighbors);\r\n            setShowCardsGroupNeighborsModal(true);\r\n        }\r\n    };\r\n\r\n    const handleSwapCards = async(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id) => {\r\n        await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/swap-cards/`,\r\n            {\r\n                'next_player_id': next_player_id,\r\n                'next_player_card_id': next_player_card_id,\r\n                'prev_player_id': prev_player_id,\r\n                'prev_player_card_id': prev_player_card_id\r\n            }\r\n        );\r\n\r\n        try {\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        } catch(error){\r\n            console.error(\"Ошибка при удалении карты с руки: \", error);\r\n        }\r\n    };\r\n\r\n    const handleChoiseCourtKill = async(player_id) => {\r\n        const responce = await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/choise-court-kill/`,\r\n            {\r\n                'player_id': player_id\r\n            }\r\n        );\r\n\r\n        if(responce.data.court_cards){\r\n            setMessage(responce.data.message);\r\n            setData(responce.data.court_cards);\r\n            setHandleName(responce.data.handle);\r\n            setShowModalWithOneChoise(true);\r\n            setPlayerIdWhereKill(responce.data.player_id_where_kill);\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleDeleteCardAndGetCrusadePoints = async (card_id) => {\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/delete-card-and-get-crusade-points/`,\r\n                {\r\n                    'player_id': playerIdWhereKill,\r\n                    'card_id': card_id\r\n                }\r\n            );\r\n\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n            \r\n        } catch(error){\r\n            console.error(\"Ошибка при удалении карты и получении ко: \", error);\r\n        }\r\n    };\r\n\r\n    const handleStealCrusadePoints = async (pl_id) => {\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/steal-crusade-points/`,\r\n                {\r\n                    'player_id_from': pl_id,\r\n                    'player_id_to': playerIdToMove,\r\n                }\r\n            );\r\n\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        } catch(error){\r\n            console.error(\"Ошибка при воровстве ко: \", error);\r\n        }\r\n    };\r\n\r\n    const handleSendCourtCrusaderNeighbor = async (player_id_from, card_id) => {\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/send-court-crusade/`,\r\n                {\r\n                    'player_id_from': player_id_from,\r\n                    'card_id': card_id,\r\n                    'player_id_to': playerIdToMove\r\n                }\r\n            );\r\n\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        }catch(error){\r\n            console.error(\"Ошибка при отправке придворного в крестовый поход: \", error);\r\n        }\r\n    };\r\n\r\n    const handleResetCard = async(card_id) => {\r\n        await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/reset-card/play-require-discard-to-settle/`,\r\n            {\r\n                'card_id': card_id,\r\n                'player_id': player.id,\r\n                'card_id_play': cardIdPlay\r\n            }\r\n        );\r\n        action();\r\n        setSelectedCard(null);\r\n    };\r\n\r\n\r\n    if(isSpecial){\r\n        return (\r\n            <PlayingSpecialCards \r\n                roomCode = {roomCode} \r\n                card = {card} \r\n                setIsSpecial = {setIsSpecial}\r\n            />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Modal\r\n            isOpen={modalAlertIsOpen}\r\n            onRequestClose={() => setmodalAlertIsOpen(false)}\r\n            contentLabel=\"Уведомление\"\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-overlay\"\r\n            >\r\n            <h2>Карту нельзя разыграть в своем городе, так как нет карт для сброса</h2>\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showModalWithOneChoise} \r\n        onRequestClose={() => setShowModalWithOneChoise(false)}\r\n        >\r\n        <h2>{message}</h2>\r\n        {data.map(item => (\r\n            <button key={item.card_id || item.id} onClick={() => handleActions[handleName]?.(item)}>\r\n            <p>{item.card_name || item.name}</p>\r\n            </button>\r\n        ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n            isOpen={showPeasantCardsModal} \r\n            onRequestClose={() => setShowPeasantCardsModal(false)}\r\n        >\r\n            <h2>Выберите по одному простолюдину из соседних городов:</h2>\r\n            {peasantCardsOptions.map((source) => (\r\n                <div>\r\n                    <h3>Город: {source.city_name}</h3>\r\n                    {source.cards.map((card)=>(\r\n                        <label key={card.id}>\r\n                            <input \r\n                                type=\"radio\" \r\n                                name={source.player_id} \r\n                                value={card.id}\r\n                                onChange={() => {\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                        ...prev,\r\n                                        [source.player_id]: card.id\r\n                                    }));\r\n                                }}\r\n                            />\r\n                            {card.name}\r\n                        </label>\r\n                    ))}\r\n                        \r\n                </div>\r\n            ))}\r\n            <button \r\n                onClick={() => {\r\n                    Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\r\n                        handleMovePeasantCard(card_id, player_id);\r\n                    });\r\n                    setShowPeasantCardsModal(false);\r\n                }}\r\n            >\r\n                <p>Переместить</p>\r\n            </button>\r\n        </Modal>\r\n\r\n        <Modal \r\n            isOpen={showCardsGroupNeighborsModal} \r\n            onRequestClose={() => setShowCardsGroupNeighborsModal(false)}\r\n        >\r\n            {cardsGroupNeighbors ? (\r\n                <>\r\n                    <h2>Выберите по одной карте из соседних городов:</h2>\r\n                    <div>\r\n                        <h3>Город: {cardsGroupNeighbors.next_player.player_city_name}</h3>\r\n                        {cardsGroupNeighbors.next_player.cards.map(c => (\r\n                            <label key={c.card_id}>\r\n                                <input\r\n                                type=\"radio\"\r\n                                name={cardsGroupNeighbors.next_player.player_id}\r\n                                value={c.card_id}\r\n                                onChange={() =>\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                    ...prev,\r\n                                    [cardsGroupNeighbors.next_player.player_id]: c.card_id\r\n                                    }))\r\n                                }\r\n                                />\r\n                                {c.card_name}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Город: {cardsGroupNeighbors.prev_player.player_city_name}</h3>\r\n                        {cardsGroupNeighbors.prev_player.cards.map(c => (\r\n                            <label key={c.card_id}>\r\n                                <input\r\n                                type=\"radio\"\r\n                                name={cardsGroupNeighbors.prev_player.player_id}\r\n                                value={c.card_id}\r\n                                onChange={() =>\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                    ...prev,\r\n                                    [cardsGroupNeighbors.prev_player.player_id]: c.card_id\r\n                                    }))\r\n                                }\r\n                                />\r\n                                {c.card_name}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                    <button \r\n                        onClick={() => {\r\n                            setShowCardsGroupNeighborsModal(false);\r\n                            const next_player_id = cardsGroupNeighbors.next_player.player_id;\r\n                            const prev_player_id = cardsGroupNeighbors.prev_player.player_id;\r\n\r\n                            const next_player_card_id = selectedCardsRadio[next_player_id];\r\n                            const prev_player_card_id = selectedCardsRadio[prev_player_id];\r\n\r\n                            if (next_player_id && prev_player_id && next_player_card_id && prev_player_card_id) {\r\n                                handleSwapCards(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id);\r\n                            }\r\n                            else{\r\n                                alert(`next_player_id= ${next_player_id}, prev_player_id=${prev_player_id}, next_player_card_id=${next_player_card_id}, prev_player_card_id=${prev_player_card_id}`)\r\n                            }\r\n                        }}\r\n                    >\r\n                        <p>Поменять местами</p>\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <div>Загрузка данных</div>\r\n            )}\r\n            \r\n        </Modal>\r\n\r\n\r\n        <Modal \r\n        isOpen={showCardsWomenNeighborsModal} \r\n        onRequestClose={() => setShowCardsWomenNeighborsModal(false)}\r\n        >\r\n        {cardsWomenNeighbors &&\r\n        cardsWomenNeighbors.next_player &&\r\n        cardsWomenNeighbors.prev_player ? (\r\n            <>\r\n            <h2>Выберите по одной женщине из соседних городов:</h2>\r\n\r\n            <div>\r\n                <h3>Город: {cardsWomenNeighbors.next_player.player_city_name}</h3>\r\n                {cardsWomenNeighbors.next_player.cards.map(c => (\r\n                <label key={c.card_id}>\r\n                    <input\r\n                    type=\"radio\"\r\n                    name={cardsWomenNeighbors.next_player.player_id}\r\n                    value={c.card_id}\r\n                    onChange={() =>\r\n                        setSelectedCardsRadio(prev => ({\r\n                        ...prev,\r\n                        [cardsWomenNeighbors.next_player.player_id]: c.card_id,\r\n                        }))\r\n                    }\r\n                    />\r\n                    {c.card_name}\r\n                </label>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Город: {cardsWomenNeighbors.prev_player.player_city_name}</h3>\r\n                {cardsWomenNeighbors.prev_player.cards.map(c => (\r\n                <label key={c.card_id}>\r\n                    <input\r\n                    type=\"radio\"\r\n                    name={cardsWomenNeighbors.prev_player.player_id}\r\n                    value={c.card_id}\r\n                    onChange={() =>\r\n                        setSelectedCardsRadio(prev => ({\r\n                        ...prev,\r\n                        [cardsWomenNeighbors.prev_player.player_id]: c.card_id,\r\n                        }))\r\n                    }\r\n                    />\r\n                    {c.card_name}\r\n                </label>\r\n                ))}\r\n            </div>\r\n\r\n            <button\r\n                onClick={() => {\r\n                Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\r\n                    handleMoveCard(player_id, card_id);\r\n                });\r\n                setShowPeasantCardsModal(false);\r\n                }}\r\n            >\r\n                <p>Переместить</p>\r\n            </button>\r\n            </>\r\n        ) : (\r\n            <div>Загрузка данных...</div>\r\n        )}\r\n        </Modal>\r\n\r\n          \r\n        <div className='playing-cards'>\r\n            <h2>Выберите город, в котором хотите разыграть <span className='accent'>{card.name}</span>:</h2>\r\n            <div className='list-players'>\r\n                {card.card_data.play_only_in_own_city ? (\r\n                    <div\r\n                    className='item-player'\r\n                    key = {player.id}\r\n                    onClick={() => {handleClickItem(player)}}>\r\n                        {player.city_name}\r\n                    </div>\r\n                ) : (\r\n                    (players.length > 0) ? (\r\n                        players.map((value, i) => (\r\n                            <div \r\n                            className='item-player' \r\n                            key={i}\r\n                            onClick={() => {handleClickItem(value)}}>\r\n                                {value.city_name}\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>Загрузка данных...</div>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayingCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}