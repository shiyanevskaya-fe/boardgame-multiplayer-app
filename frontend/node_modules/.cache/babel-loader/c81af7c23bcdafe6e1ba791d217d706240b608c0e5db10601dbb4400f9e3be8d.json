{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayerTurn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/PlayerTurn.css\";\nimport axios from 'axios';\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerTurn = ({\n  player,\n  roomCode\n}) => {\n  _s();\n  const [handCards, setHandCards] = useState([]);\n  const [hasFullHand, setHasFullHand] = useState(false);\n  const fetchPlayerHand = async () => {\n    try {\n      const response = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/hand/`);\n      setHandCards(response.data);\n    } catch (error) {\n      console.error(\"Ошибка получения карт игрока:\", error);\n    }\n  };\n  const fetchAndAddTopCard = async () => {\n    try {\n      const responseTop = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\n      const topCard = responseTop.data;\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/add-hand-card/${topCard.id}/`, {\n        'id_card_in_deck': topCard.id_card_in_deck\n      });\n    } catch (error) {\n      console.error(\"Ошибка при получении или добавлении верхней карты:\", error);\n    }\n  };\n  useEffect(() => {\n    const startTurn = async () => {\n      if (handCards.length === 0) {\n        await fetchAndAddTopCard();\n      }\n      await fetchPlayerHand();\n    };\n    startTurn();\n  }, [roomCode, player.id]);\n  const handleCardSelect = async () => {\n    await fetchPlayerHand();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-turn\",\n    children: !hasFullHand ? /*#__PURE__*/_jsxDEV(SelectFromCrossRoad, {\n      roomCode: roomCode,\n      onCardSelect: handleCardSelect,\n      player: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PlayerCardsDisplay, {\n      cards: handCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerTurn, \"MxfNFkMieIFqFo0dtzU1Y7qVkGU=\");\n_c = PlayerTurn;\nexport default PlayerTurn;\nvar _c;\n$RefreshReg$(_c, \"PlayerTurn\");","map":{"version":3,"names":["React","useEffect","useState","axios","SelectFromCrossRoad","PlayerCardsDisplay","jsxDEV","_jsxDEV","PlayerTurn","player","roomCode","_s","handCards","setHandCards","hasFullHand","setHasFullHand","fetchPlayerHand","response","get","id","data","error","console","fetchAndAddTopCard","responseTop","topCard","post","id_card_in_deck","startTurn","length","handleCardSelect","className","children","onCardSelect","fileName","_jsxFileName","lineNumber","columnNumber","cards","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayerTurn.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"../styles/PlayerTurn.css\";\r\nimport axios from 'axios';\r\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\r\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\r\n\r\nconst PlayerTurn = ({ player, roomCode }) => {\r\n    const [handCards, setHandCards] = useState([]);\r\n    const [hasFullHand, setHasFullHand] = useState(false);\r\n\r\n    const fetchPlayerHand = async () => {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/hand/`\r\n            );\r\n            setHandCards(response.data);\r\n        } catch (error) {\r\n            console.error(\"Ошибка получения карт игрока:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchAndAddTopCard = async () => {\r\n        try {\r\n            const responseTop = await axios.get(\r\n                `http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`\r\n            );\r\n            const topCard = responseTop.data;\r\n\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/add-hand-card/${topCard.id}/`, {\r\n                    'id_card_in_deck': topCard.id_card_in_deck,\r\n                }\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Ошибка при получении или добавлении верхней карты:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const startTurn = async () => {\r\n            if(handCards.length === 0){\r\n                await fetchAndAddTopCard();\r\n            }\r\n\r\n            await fetchPlayerHand();\r\n        };\r\n\r\n        startTurn();\r\n    }, [roomCode, player.id]);\r\n\r\n    const handleCardSelect = async() => {\r\n        await fetchPlayerHand();\r\n    };\r\n\r\n    return (\r\n        <div className=\"player-turn\">\r\n            {!hasFullHand ? (\r\n                <SelectFromCrossRoad\r\n                    roomCode={roomCode}\r\n                    onCardSelect={handleCardSelect}\r\n                    player={player}\r\n                />\r\n            ) : (\r\n                <PlayerCardsDisplay cards={handCards} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n  \r\n\r\nexport default PlayerTurn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,0BAA0B;AAC1D,OAAOC,kBAAkB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMc,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC5B,sCAAsCR,QAAQ,YAAYD,MAAM,CAACU,EAAE,QACvE,CAAC;MACDN,YAAY,CAACI,QAAQ,CAACG,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACA,MAAMC,WAAW,GAAG,MAAMrB,KAAK,CAACe,GAAG,CAC/B,2CAA2CR,QAAQ,OACvD,CAAC;MACD,MAAMe,OAAO,GAAGD,WAAW,CAACJ,IAAI;MAEhC,MAAMjB,KAAK,CAACuB,IAAI,CACZ,sCAAsChB,QAAQ,YAAYD,MAAM,CAACU,EAAE,kBAAkBM,OAAO,CAACN,EAAE,GAAG,EAAE;QAChG,iBAAiB,EAAEM,OAAO,CAACE;MAC/B,CACJ,CAAC;IACL,CAAC,CAAC,OAAON,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;IAC9E;EACJ,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACZ,MAAM2B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAGhB,SAAS,CAACiB,MAAM,KAAK,CAAC,EAAC;QACtB,MAAMN,kBAAkB,CAAC,CAAC;MAC9B;MAEA,MAAMP,eAAe,CAAC,CAAC;IAC3B,CAAC;IAEDY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAAClB,QAAQ,EAAED,MAAM,CAACU,EAAE,CAAC,CAAC;EAEzB,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAW;IAChC,MAAMd,eAAe,CAAC,CAAC;EAC3B,CAAC;EAED,oBACIT,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAC,QAAA,EACvB,CAAClB,WAAW,gBACTP,OAAA,CAACH,mBAAmB;MAChBM,QAAQ,EAAEA,QAAS;MACnBuB,YAAY,EAAEH,gBAAiB;MAC/BrB,MAAM,EAAEA;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,gBAEF9B,OAAA,CAACF,kBAAkB;MAACiC,KAAK,EAAE1B;IAAU;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAC1C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA1B,EAAA,CA7DKH,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAgEhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}