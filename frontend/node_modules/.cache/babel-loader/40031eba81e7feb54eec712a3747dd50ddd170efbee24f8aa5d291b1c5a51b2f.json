{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayingCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/PlayingCards.css\";\nimport axios from 'axios';\nimport PlayingSpecialCards from \"./PlayingSpecialCards.js\";\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst PlayingCards = ({\n  roomCode,\n  card,\n  action,\n  setSelectedCard\n}) => {\n  _s();\n  console.log(card);\n  const player = JSON.parse(localStorage.getItem('player'));\n  const [players, setPlayers] = useState([]);\n  const [isSpecial, setIsSpecial] = useState(false);\n  const [epidemicOptions, setEpidemicOptions] = useState([]);\n  const [showEpidemicModal, setShowEpidemicModal] = useState(false);\n  const [courtCardsOptions, setCourtCardsOptions] = useState([]);\n  const [playerIdWhereKill, setPlayerIdWhereKill] = useState();\n  const [showCourtCardsModal, setShowCourtCardsModal] = useState(false);\n  const [peasantCardsOptions, setPeasantCardsOptions] = useState([]);\n  const [playerIdToMovePeasantCards, setPlayerIdToMovePeasantCards] = useState();\n  const [showPeasantCardsModal, setShowPeasantCardsModal] = useState(false);\n  const [selectedCardsRadio, setSelectedCardsRadio] = useState({});\n  const [playerIdToMove, setPlayerIdToMove] = useState();\n  const [monksOptions, setMonksOptions] = useState([]);\n  const [showMonksModal, setShowMonksModal] = useState(false);\n  const [commonerCrusaderCardsOptions, setCommonerCrusaderCardsOptions] = useState([]);\n  const [showCommonerCrusaderCardsModal, setShowCommonerCrusaderCardsModal] = useState(false);\n  const [availableGroups, setAvailableGroups] = useState([]);\n  const [showAvailableGroupsModal, setShowAvailableGroupsModal] = useState(false);\n  const [nextPlayer, setNextPlayer] = useState([]);\n  const [prevPlayer, setPrevPlayer] = useState([]);\n  const [cardsGroupNeighbors, setCardsGroupNeighbors] = useState();\n  const [showCardsGroupNeighborsModal, setShowCardsGroupNeighborsModal] = useState(false);\n  const [playersWithCourt, setPlayersWithCourt] = useState([]);\n  const [showPlayersWithCourtModal, setShowPlayersWithCourtModal] = useState(false);\n  const [cardDescription, setCardDescription] = useState();\n  const [cardsWomenNeighbors, setCardsWomenNeighbors] = useState([]);\n  const [showCardsWomenNeighborsModal, setShowCardsWomenNeighborsModal] = useState(false);\n  const [allPlayedCards, setAllPlayedCards] = useState([]);\n  const [showAllPlayedCardsModal, setShowAllPlayedCardsModal] = useState(false);\n  const [playersHaveCrusadePoints, setPlayersHaveCrusadePoints] = useState([]);\n  const [showPlayersHaveCrusadePointsModal, setShowPlayersHaveCrusadePointsModal] = useState(false);\n  const [courtCrusaderNeighbor, setCourtCrusaderNeighbor] = useState([]);\n  const [showCourtCrusaderNeighborModal, setShowCourtCrusaderNeighborModal] = useState(false);\n  const [modalAlertIsOpen, setmodalAlertIsOpen] = useState(false);\n  const [cardsHand, setCardsHand] = useState([]);\n  const [showCardsHandModal, setShowCardsHandModal] = useState(false);\n  const [cardIdPlay, setCardIdPlay] = useState();\n  const [allPlayerPlayedCards, setAllPlayerPlayedCards] = useState([]);\n  const [showAllPlayerPlayedCardsModal, setShowAllPlayerPlayedCardsModal] = useState(false);\n  const fetchPlayers = async () => {\n    try {\n      const response_players = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/`);\n      setPlayers(response_players.data);\n    } catch (error) {\n      console.error(\"Ошибка получения пользователей:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPlayers();\n    setCardDescription(card.card_data.description);\n  }, [roomCode, player.id]);\n  useEffect(() => {\n    if (card.card_group_in_deck === \"universal\") {\n      setIsSpecial(true);\n    }\n  }, [card]);\n  const handleClickItem = async pl => {\n    if (card.card_data.description === \"require_discard_to_settle\" && pl.id !== player.id || card.card_data.description !== \"require_discard_to_settle\") {\n      try {\n        const responce = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`, {\n          'player_id': pl.id,\n          'id_card_in_deck': card.id\n        });\n        if (responce.data.epidemics) {\n          setEpidemicOptions(responce.data.epidemics);\n          setShowEpidemicModal(true);\n          return;\n        }\n        if (responce.data.court_cards) {\n          setCourtCardsOptions(responce.data.court_cards);\n          setShowCourtCardsModal(true);\n          setPlayerIdWhereKill(responce.data.player_id_where_kill);\n          return;\n        }\n        if (responce.data.monks) {\n          setMonksOptions(responce.data.monks);\n          setShowMonksModal(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.commoner_crusader_cards) {\n          setCommonerCrusaderCardsOptions(responce.data.commoner_crusader_cards);\n          setShowCommonerCrusaderCardsModal(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.available_groups) {\n          setAvailableGroups(responce.data.available_groups);\n          setShowAvailableGroupsModal(true);\n          setNextPlayer(responce.data.neighbors.next_player);\n          setPrevPlayer(responce.data.neighbors.prev_player);\n          return;\n        }\n        if (responce.data.players_with_court) {\n          setPlayersWithCourt(responce.data.players_with_court);\n          setShowPlayersWithCourtModal(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.cards_women_neighbors) {\n          setCardsWomenNeighbors(responce.data.cards_women_neighbors);\n          setShowCardsWomenNeighborsModal(true);\n          setPlayerIdToMove(responce.data.player_id_to_move);\n          return;\n        }\n        if (responce.data.all_played_cards) {\n          setAllPlayedCards(responce.data.all_played_cards);\n          setShowAllPlayedCardsModal(true);\n          setPlayerIdWhereKill(responce.data.player_id);\n          return;\n        }\n        if (responce.data.players_have_crusade_points) {\n          setPlayersHaveCrusadePoints(responce.data.players_have_crusade_points);\n          setShowPlayersHaveCrusadePointsModal(true);\n          setPlayerIdToMove(responce.data.player);\n          return;\n        }\n        if (responce.data.court_crusader_neighbor) {\n          setCourtCrusaderNeighbor(responce.data.court_crusader_neighbor);\n          setShowCourtCrusaderNeighborModal(true);\n          setPlayerIdToMove(responce.data.player_id);\n          return;\n        }\n      } catch (error) {\n        console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\n      }\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n      action();\n      setSelectedCard(null);\n    } else if (card.card_data.description === \"require_discard_to_settle\" && pl.id === player.id) {\n      // Если рыцарь или конь и игрок хочет поселить в своем городе, то надо сбросить карту с руки\n      try {\n        const response = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/require-discard-to-settle/`, {\n          'player_id': player.id,\n          'card_id': card.id\n        });\n        if (!response.data.can_play) {\n          // сообщение с ошибкой: вы не можете поселить жителя в своем городе, так как нет карт для сброса\n          setmodalAlertIsOpen(true);\n          return;\n        } else if (response.data.can_play && response.data.cards_hand) {\n          // модальное окно с выбором карты, которую надо сбросить\n          setCardsHand(response.data.cards_hand);\n          setCardIdPlay(response.data.card_id_play);\n          setShowCardsHandModal(true);\n          return;\n        }\n      } catch (error) {\n        console.error(\"Ошибка при розыгрыше карты в своем городе\", error);\n      }\n    }\n  };\n  const handleCureEpidemic = async epidemicId => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/cure-epidemic/`, {\n        epidemic_id: epidemicId\n      });\n      setShowEpidemicModal(false);\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при лечении эпидемии:\", error);\n    }\n  };\n  const handleKillCourt = async courtCardId => {\n    setShowCourtCardsModal(false);\n    try {\n      const responce = await axios.post(`\n                http://192.168.1.68:8000/api/rooms/${roomCode}/kill-court/`, {\n        'player_id_where_kill': playerIdWhereKill,\n        'id_card_in_deck': courtCardId,\n        'card_description': cardDescription\n      });\n      if (responce.data.next_player && responce.data.prev_player) {\n        setPeasantCardsOptions([{\n          player_id: responce.data.next_player.id,\n          city_name: responce.data.next_player.city_name,\n          cards: responce.data.next_player.peasant_cards\n        }, {\n          player_id: responce.data.prev_player.id,\n          city_name: responce.data.prev_player.city_name,\n          cards: responce.data.prev_player.peasant_cards\n        }]);\n        setPlayerIdToMovePeasantCards(responce.data.player_id_to_move);\n        setShowPeasantCardsModal(true);\n        return;\n      } else {\n        try {\n          await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n            data: {\n              'player_id': player.id,\n              'id_card_in_deck': card.id\n            }\n          });\n          action();\n          setSelectedCard(null);\n        } catch (error) {\n          console.error(\"Ошибка при удалении карты с руки: \", error);\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты придворного: \", error);\n    }\n  };\n  const handleMovePeasantCard = async (peasantCardId, fromPlayerId) => {\n    setShowPeasantCardsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-peasant-card/`, {\n        'player_id_from_move': fromPlayerId,\n        'player_id_to_move': playerIdToMovePeasantCards,\n        'id_card_in_deck': peasantCardId\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n        action();\n        setSelectedCard(null);\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при перемещении карты простолюдина: \", error);\n    }\n  };\n  const handleMoveCard = async (player_id_from_move, card_id) => {\n    setShowMonksModal(false);\n    setShowCommonerCrusaderCardsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-card/`, {\n        'player_id_from_move': player_id_from_move,\n        'player_id_to_move': playerIdToMove,\n        'card_id': card_id\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n        action();\n        setSelectedCard(null);\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при перещении карты Монах: \", error);\n    }\n  };\n  const handleChoiseCardToMove = async group => {\n    setShowAvailableGroupsModal(false);\n    const response = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/choise-card-to-move/`, {\n      'next_player_id': nextPlayer.player_id,\n      'prev_player_id': prevPlayer.player_id,\n      'card_group': group\n    });\n    if (response.data.cards_group_neighbors) {\n      setCardsGroupNeighbors(response.data.cards_group_neighbors);\n      setShowCardsGroupNeighborsModal(true);\n    }\n  };\n  const handleSwapCards = async (next_player_id, next_player_card_id, prev_player_id, prev_player_card_id) => {\n    await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/swap-cards/`, {\n      'next_player_id': next_player_id,\n      'next_player_card_id': next_player_card_id,\n      'prev_player_id': prev_player_id,\n      'prev_player_card_id': prev_player_card_id\n    });\n    try {\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты с руки: \", error);\n    }\n  };\n  const handleChoiseCourtKill = async player_id => {\n    setShowPlayersWithCourtModal(false);\n    const responce = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/choise-court-kill/`, {\n      'player_id': player_id\n    });\n    if (responce.data.court_cards) {\n      setCourtCardsOptions(responce.data.court_cards);\n      setShowCourtCardsModal(true);\n      setPlayerIdWhereKill(responce.data.player_id_where_kill);\n      return;\n    }\n  };\n  const handleDeleteCardAndGetCrusadePoints = async card_id => {\n    setShowAllPlayedCardsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/delete-card-and-get-crusade-points/`, {\n        'player_id': playerIdWhereKill,\n        'card_id': card_id\n      });\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты и получении ко: \", error);\n    }\n  };\n  const handleStealCrusadePoints = async pl_id => {\n    setShowPlayersHaveCrusadePointsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/steal-crusade-points/`, {\n        'player_id_from': pl_id,\n        'player_id_to': playerIdToMove\n      });\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при воровстве ко: \", error);\n    }\n  };\n  const handleSendCourtCrusaderNeighbor = async (player_id_from, card_id) => {\n    setShowCourtCrusaderNeighborModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/send-court-crusade/`, {\n        'player_id_from': player_id_from,\n        'card_id': card_id,\n        'player_id_to': playerIdToMove\n      });\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при отправке придворного в крестовый поход: \", error);\n    }\n  };\n  const handleResetCard = async card_id => {\n    setShowCardsHandModal(false);\n    await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/reset-card/play-require-discard-to-settle/`, {\n      'card_id': card_id,\n      'player_id': player.id,\n      'card_id_play': cardIdPlay\n    });\n    action();\n    setSelectedCard(null);\n  };\n  if (isSpecial) {\n    return /*#__PURE__*/_jsxDEV(PlayingSpecialCards, {\n      roomCode: roomCode,\n      card: card,\n      setIsSpecial: setIsSpecial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalAlertIsOpen,\n      onRequestClose: () => setmodalAlertIsOpen(false),\n      contentLabel: \"\\u0423\\u0432\\u0435\\u0434\\u043E\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435\",\n      className: \"modal\",\n      overlayClassName: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041A\\u0430\\u0440\\u0442\\u0443 \\u043D\\u0435\\u043B\\u044C\\u0437\\u044F \\u0440\\u0430\\u0437\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C \\u0432 \\u0441\\u0432\\u043E\\u0435\\u043C \\u0433\\u043E\\u0440\\u043E\\u0434\\u0435, \\u0442\\u0430\\u043A \\u043A\\u0430\\u043A \\u043D\\u0435\\u0442 \\u043A\\u0430\\u0440\\u0442 \\u0434\\u043B\\u044F \\u0441\\u0431\\u0440\\u043E\\u0441\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showEpidemicModal,\n      onRequestClose: () => setShowEpidemicModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043F\\u0438\\u0434\\u0435\\u043C\\u0438\\u044E \\u0434\\u043B\\u044F \\u043B\\u0435\\u0447\\u0435\\u043D\\u0438\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this), epidemicOptions.map(ep => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCureEpidemic(ep.id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 17\n        }, this)\n      }, ep.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCardsHandModal,\n      onRequestClose: () => setShowCardsHandModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0443, \\u043A\\u043E\\u0442\\u043E\\u0440\\u0443\\u044E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 13\n      }, this), cardsHand.map(card_hand => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleResetCard(card_hand.card_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card_hand.card_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }, this)\n      }, card_hand.card_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCourtCardsModal,\n      onRequestClose: () => setShowCourtCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0434\\u0432\\u043E\\u0440\\u043D\\u043E\\u0433\\u043E, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0431\\u0438\\u0442\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 13\n      }, this), courtCardsOptions.map(court_card => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleKillCourt(court_card.id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: court_card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 17\n        }, this)\n      }, court_card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCourtCrusaderNeighborModal,\n      onRequestClose: () => setShowCourtCrusaderNeighborModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0434\\u0432\\u043E\\u0440\\u043D\\u043E\\u0433\\u043E, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432 \\u043A\\u0440\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u0445\\u043E\\u0434:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 13\n      }, this), courtCrusaderNeighbor.map(court_card => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSendCourtCrusaderNeighbor(court_card.player_id, court_card.card_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: court_card.card_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 17\n        }, this)\n      }, court_card.card_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showAllPlayedCardsModal,\n      onRequestClose: () => setShowAllPlayedCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0443, \\u043A\\u043E\\u0442\\u043E\\u0440\\u0443\\u044E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 13\n      }, this), allPlayedCards.map(played_card => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteCardAndGetCrusadePoints(played_card.card_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: played_card.card_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 17\n        }, this)\n      }, played_card.card_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showPeasantCardsModal,\n      onRequestClose: () => setShowPeasantCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u043C\\u0443 \\u043F\\u0440\\u043E\\u0441\\u0442\\u043E\\u043B\\u044E\\u0434\\u0438\\u043D\\u0443 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }, this), peasantCardsOptions.map(source => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", source.city_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 21\n        }, this), source.cards.map(card => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: source.player_id,\n            value: card.id,\n            onChange: () => {\n              setSelectedCardsRadio(prev => ({\n                ...prev,\n                [source.player_id]: card.id\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 29\n          }, this), card.name]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\n            handleMovePeasantCard(card_id, player_id);\n          });\n          setShowPeasantCardsModal(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showMonksModal,\n      onRequestClose: () => setShowMonksModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0438\\u0437 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0435\\u043C\\u0430\\u043D\\u0438\\u0442\\u044C \\u041C\\u043E\\u043D\\u0430\\u0445\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 13\n      }, this), monksOptions.map(monk => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoveCard(monk.other_player_id, monk.id_card_in_deck),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: monk.other_player_city_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 17\n        }, this)\n      }, monk.other_player_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showPlayersHaveCrusadePointsModal,\n      onRequestClose: () => setShowPlayersHaveCrusadePointsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0438\\u0437 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0441\\u0432\\u043E\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043A\\u0440\\u0435\\u0441\\u0442\\u043E\\u0432\\u044B\\u0435 \\u043E\\u0447\\u043A\\u0438:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 13\n      }, this), playersHaveCrusadePoints.map(pl => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleStealCrusadePoints(pl.player_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pl.player_city_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 17\n        }, this)\n      }, pl.player_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCommonerCrusaderCardsModal,\n      onRequestClose: () => setShowCommonerCrusaderCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0443 \\u043F\\u0440\\u043E\\u0441\\u0442\\u043E\\u043B\\u044E\\u0434\\u0438\\u043D\\u0430 \\u043A\\u0440\\u0435\\u0441\\u0442\\u043E\\u043D\\u043E\\u0441\\u0446\\u0430, \\u043A\\u043E\\u0442\\u043E\\u0440\\u0443\\u044E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 13\n      }, this), commonerCrusaderCardsOptions.map(card => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoveCard(card.player_id, card.card_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.card_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 17\n        }, this)\n      }, card.card_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showAvailableGroupsModal,\n      onRequestClose: () => setShowAvailableGroupsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043E\\u0441\\u043B\\u043E\\u0432\\u0438\\u0435 \\u0434\\u043B\\u044F \\u043E\\u0431\\u043C\\u0435\\u043D\\u0430 \\u0436\\u0438\\u0442\\u0435\\u043B\\u044F\\u043C\\u0438 \\u043C\\u0435\\u0436\\u0434\\u0443 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u043C\\u0438 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430\\u043C\\u0438 \", prevPlayer.player_city_name, \" \\u0438 \", nextPlayer.player_city_name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 13\n      }, this), availableGroups.map((group, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChoiseCardToMove(group.value),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCardsGroupNeighborsModal,\n      onRequestClose: () => setShowCardsGroupNeighborsModal(false),\n      children: cardsGroupNeighbors ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u0439 \\u043A\\u0430\\u0440\\u0442\\u0435 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 714,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsGroupNeighbors.next_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 25\n          }, this), cardsGroupNeighbors.next_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsGroupNeighbors.next_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsGroupNeighbors.next_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 33\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsGroupNeighbors.prev_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 25\n          }, this), cardsGroupNeighbors.prev_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsGroupNeighbors.prev_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsGroupNeighbors.prev_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 33\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowCardsGroupNeighborsModal(false);\n            const next_player_id = cardsGroupNeighbors.next_player.player_id;\n            const prev_player_id = cardsGroupNeighbors.prev_player.player_id;\n            const next_player_card_id = selectedCardsRadio[next_player_id];\n            const prev_player_card_id = selectedCardsRadio[prev_player_id];\n            if (next_player_id && prev_player_id && next_player_card_id && prev_player_card_id) {\n              handleSwapCards(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id);\n            } else {\n              alert(`next_player_id= ${next_player_id}, prev_player_id=${prev_player_id}, next_player_card_id=${next_player_card_id}, prev_player_card_id=${prev_player_card_id}`);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u043E\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u0430\\u043C\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCardsWomenNeighborsModal,\n      onRequestClose: () => setShowCardsWomenNeighborsModal(false),\n      children: cardsWomenNeighbors && cardsWomenNeighbors.next_player && cardsWomenNeighbors.prev_player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u0439 \\u0436\\u0435\\u043D\\u0449\\u0438\\u043D\\u0435 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsWomenNeighbors.next_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 17\n          }, this), cardsWomenNeighbors.next_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsWomenNeighbors.next_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsWomenNeighbors.next_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 21\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsWomenNeighbors.prev_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 17\n          }, this), cardsWomenNeighbors.prev_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsWomenNeighbors.prev_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsWomenNeighbors.prev_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 21\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\n              handleMoveCard(player_id, card_id);\n            });\n            setShowPeasantCardsModal(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showPlayersWithCourtModal,\n      onRequestClose: () => setShowPlayersWithCourtModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0445\\u043E\\u0447\\u0435\\u0448\\u044C \\u0443\\u0431\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u0434\\u0432\\u043E\\u0440\\u043D\\u043E\\u0433\\u043E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 13\n      }, this), playersWithCourt.map((pl, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChoiseCourtKill(pl.other_player_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pl.other_player_city_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 60\n        }, this), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-players\",\n        children: card.card_data.play_only_in_own_city ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-player\",\n          onClick: () => {\n            handleClickItem(player);\n          },\n          children: player.city_name\n        }, player.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 21\n        }, this) : players.length > 0 ? players.map((value, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-player\",\n          onClick: () => {\n            handleClickItem(value);\n          },\n          children: value.city_name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PlayingCards, \"3gFhWnVAZk6vX1XYaKIp7S7A5rs=\");\n_c = PlayingCards;\nexport default PlayingCards;\nvar _c;\n$RefreshReg$(_c, \"PlayingCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","PlayingSpecialCards","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","PlayingCards","roomCode","card","action","setSelectedCard","_s","console","log","player","JSON","parse","localStorage","getItem","players","setPlayers","isSpecial","setIsSpecial","epidemicOptions","setEpidemicOptions","showEpidemicModal","setShowEpidemicModal","courtCardsOptions","setCourtCardsOptions","playerIdWhereKill","setPlayerIdWhereKill","showCourtCardsModal","setShowCourtCardsModal","peasantCardsOptions","setPeasantCardsOptions","playerIdToMovePeasantCards","setPlayerIdToMovePeasantCards","showPeasantCardsModal","setShowPeasantCardsModal","selectedCardsRadio","setSelectedCardsRadio","playerIdToMove","setPlayerIdToMove","monksOptions","setMonksOptions","showMonksModal","setShowMonksModal","commonerCrusaderCardsOptions","setCommonerCrusaderCardsOptions","showCommonerCrusaderCardsModal","setShowCommonerCrusaderCardsModal","availableGroups","setAvailableGroups","showAvailableGroupsModal","setShowAvailableGroupsModal","nextPlayer","setNextPlayer","prevPlayer","setPrevPlayer","cardsGroupNeighbors","setCardsGroupNeighbors","showCardsGroupNeighborsModal","setShowCardsGroupNeighborsModal","playersWithCourt","setPlayersWithCourt","showPlayersWithCourtModal","setShowPlayersWithCourtModal","cardDescription","setCardDescription","cardsWomenNeighbors","setCardsWomenNeighbors","showCardsWomenNeighborsModal","setShowCardsWomenNeighborsModal","allPlayedCards","setAllPlayedCards","showAllPlayedCardsModal","setShowAllPlayedCardsModal","playersHaveCrusadePoints","setPlayersHaveCrusadePoints","showPlayersHaveCrusadePointsModal","setShowPlayersHaveCrusadePointsModal","courtCrusaderNeighbor","setCourtCrusaderNeighbor","showCourtCrusaderNeighborModal","setShowCourtCrusaderNeighborModal","modalAlertIsOpen","setmodalAlertIsOpen","cardsHand","setCardsHand","showCardsHandModal","setShowCardsHandModal","cardIdPlay","setCardIdPlay","allPlayerPlayedCards","setAllPlayerPlayedCards","showAllPlayerPlayedCardsModal","setShowAllPlayerPlayedCardsModal","fetchPlayers","response_players","get","data","error","card_data","description","id","card_group_in_deck","handleClickItem","pl","responce","post","epidemics","court_cards","player_id_where_kill","monks","player_id_to_move","commoner_crusader_cards","available_groups","neighbors","next_player","prev_player","players_with_court","cards_women_neighbors","all_played_cards","player_id","players_have_crusade_points","court_crusader_neighbor","delete","response","can_play","cards_hand","card_id_play","handleCureEpidemic","epidemicId","epidemic_id","handleKillCourt","courtCardId","city_name","cards","peasant_cards","handleMovePeasantCard","peasantCardId","fromPlayerId","handleMoveCard","player_id_from_move","card_id","handleChoiseCardToMove","group","cards_group_neighbors","handleSwapCards","next_player_id","next_player_card_id","prev_player_id","prev_player_card_id","handleChoiseCourtKill","handleDeleteCardAndGetCrusadePoints","handleStealCrusadePoints","pl_id","handleSendCourtCrusaderNeighbor","player_id_from","handleResetCard","fileName","_jsxFileName","lineNumber","columnNumber","children","isOpen","onRequestClose","contentLabel","className","overlayClassName","map","ep","onClick","name","card_hand","card_name","court_card","played_card","source","type","value","onChange","prev","Object","entries","forEach","monk","other_player_id","id_card_in_deck","other_player_city_name","player_city_name","i","label","c","alert","play_only_in_own_city","length","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayingCards.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"../styles/PlayingCards.css\";\r\nimport axios from 'axios';\r\nimport PlayingSpecialCards from \"./PlayingSpecialCards.js\";\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PlayingCards = ({roomCode, card, action, setSelectedCard}) => {\r\n    \r\n\r\n    console.log(card);\r\n    const player = JSON.parse(localStorage.getItem('player'));\r\n\r\n    const [players, setPlayers] = useState([]);\r\n    const [isSpecial, setIsSpecial] = useState(false);\r\n\r\n    const [epidemicOptions, setEpidemicOptions] = useState([]);\r\n    const [showEpidemicModal, setShowEpidemicModal] = useState(false);\r\n\r\n    const [courtCardsOptions, setCourtCardsOptions] = useState([]);\r\n    const [playerIdWhereKill, setPlayerIdWhereKill] = useState();\r\n    const [showCourtCardsModal, setShowCourtCardsModal] = useState(false);\r\n\r\n    const [peasantCardsOptions, setPeasantCardsOptions] = useState([]);\r\n    const [playerIdToMovePeasantCards, setPlayerIdToMovePeasantCards] = useState();\r\n    const [showPeasantCardsModal, setShowPeasantCardsModal] = useState(false);\r\n    const [selectedCardsRadio, setSelectedCardsRadio] = useState({});\r\n\r\n    const [playerIdToMove, setPlayerIdToMove] = useState();\r\n\r\n    const [monksOptions, setMonksOptions] = useState([]);\r\n    const [showMonksModal, setShowMonksModal] = useState(false);\r\n\r\n    const [commonerCrusaderCardsOptions, setCommonerCrusaderCardsOptions] = useState([]);\r\n    const [showCommonerCrusaderCardsModal, setShowCommonerCrusaderCardsModal] = useState(false);\r\n    \r\n    const [availableGroups, setAvailableGroups] = useState([]);\r\n    const [showAvailableGroupsModal, setShowAvailableGroupsModal] = useState(false);\r\n    const [nextPlayer, setNextPlayer] = useState([]);\r\n    const [prevPlayer, setPrevPlayer] = useState([]);\r\n\r\n    const [cardsGroupNeighbors, setCardsGroupNeighbors] = useState();\r\n    const [showCardsGroupNeighborsModal, setShowCardsGroupNeighborsModal] = useState(false);\r\n\r\n    const [playersWithCourt, setPlayersWithCourt] = useState([]);\r\n    const [showPlayersWithCourtModal, setShowPlayersWithCourtModal] = useState(false);\r\n\r\n    const [cardDescription, setCardDescription] = useState();\r\n\r\n    const [cardsWomenNeighbors, setCardsWomenNeighbors] = useState([]);\r\n    const [showCardsWomenNeighborsModal, setShowCardsWomenNeighborsModal] = useState(false);\r\n\r\n    const [allPlayedCards, setAllPlayedCards] = useState([]);\r\n    const [showAllPlayedCardsModal, setShowAllPlayedCardsModal] = useState(false);\r\n\r\n    const [playersHaveCrusadePoints, setPlayersHaveCrusadePoints] = useState([]);\r\n    const [showPlayersHaveCrusadePointsModal, setShowPlayersHaveCrusadePointsModal] = useState(false);\r\n\r\n    const [courtCrusaderNeighbor, setCourtCrusaderNeighbor] = useState([]);\r\n    const [showCourtCrusaderNeighborModal, setShowCourtCrusaderNeighborModal] = useState(false);\r\n\r\n    const [modalAlertIsOpen, setmodalAlertIsOpen] = useState(false);\r\n\r\n    const [cardsHand, setCardsHand] = useState([]);\r\n    const [showCardsHandModal, setShowCardsHandModal] = useState(false);\r\n\r\n    const [cardIdPlay, setCardIdPlay] = useState();\r\n\r\n    const [allPlayerPlayedCards, setAllPlayerPlayedCards] = useState([]);\r\n    const [showAllPlayerPlayedCardsModal, setShowAllPlayerPlayedCardsModal] = useState(false);\r\n\r\n    const fetchPlayers = async() => {\r\n        try {\r\n            const response_players = await axios.get(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/`\r\n            );\r\n\r\n            setPlayers(response_players.data);\r\n        } catch(error){\r\n            console.error(\"Ошибка получения пользователей:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n        setCardDescription(card.card_data.description);\r\n    }, [roomCode, player.id]);\r\n\r\n    useEffect(() => {\r\n        if (card.card_group_in_deck === \"universal\") {\r\n            setIsSpecial(true);\r\n        }\r\n    }, [card]);\r\n\r\n    const handleClickItem = async(pl) => {\r\n        if((card.card_data.description === \"require_discard_to_settle\" && pl.id !== player.id) || (card.card_data.description !== \"require_discard_to_settle\")){\r\n            try {\r\n                const responce = await axios.post(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`,{\r\n                        'player_id': pl.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                );\r\n\r\n                if(responce.data.epidemics){\r\n                    setEpidemicOptions(responce.data.epidemics);\r\n                    setShowEpidemicModal(true);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.court_cards){\r\n                    setCourtCardsOptions(responce.data.court_cards);\r\n                    setShowCourtCardsModal(true);\r\n                    setPlayerIdWhereKill(responce.data.player_id_where_kill);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.monks){\r\n                    setMonksOptions(responce.data.monks);\r\n                    setShowMonksModal(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.commoner_crusader_cards){\r\n                    setCommonerCrusaderCardsOptions(responce.data.commoner_crusader_cards);\r\n                    setShowCommonerCrusaderCardsModal(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.available_groups){\r\n                    setAvailableGroups(responce.data.available_groups);\r\n                    setShowAvailableGroupsModal(true);\r\n                    setNextPlayer(responce.data.neighbors.next_player);\r\n                    setPrevPlayer(responce.data.neighbors.prev_player);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.players_with_court){\r\n                    setPlayersWithCourt(responce.data.players_with_court);\r\n                    setShowPlayersWithCourtModal(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.cards_women_neighbors){\r\n                    setCardsWomenNeighbors(responce.data.cards_women_neighbors);\r\n                    setShowCardsWomenNeighborsModal(true);\r\n                    setPlayerIdToMove(responce.data.player_id_to_move);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.all_played_cards){\r\n                    setAllPlayedCards(responce.data.all_played_cards);\r\n                    setShowAllPlayedCardsModal(true);\r\n                    setPlayerIdWhereKill(responce.data.player_id);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.players_have_crusade_points){\r\n                    setPlayersHaveCrusadePoints(responce.data.players_have_crusade_points);\r\n                    setShowPlayersHaveCrusadePointsModal(true);\r\n                    setPlayerIdToMove(responce.data.player);\r\n                    return;\r\n                }\r\n\r\n                if(responce.data.court_crusader_neighbor){\r\n                    setCourtCrusaderNeighbor(responce.data.court_crusader_neighbor);\r\n                    setShowCourtCrusaderNeighborModal(true);\r\n                    setPlayerIdToMove(responce.data.player_id);\r\n                    return;\r\n                }\r\n            } catch(error){\r\n                console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\r\n            }\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n            action();\r\n            setSelectedCard(null);\r\n        }\r\n        else if(card.card_data.description === \"require_discard_to_settle\" && pl.id === player.id){\r\n            // Если рыцарь или конь и игрок хочет поселить в своем городе, то надо сбросить карту с руки\r\n            try{\r\n                const response = await axios.post(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/require-discard-to-settle/`,\r\n                    {\r\n                        'player_id': player.id,\r\n                        'card_id': card.id\r\n                    }\r\n                );\r\n                if(!response.data.can_play){\r\n                    // сообщение с ошибкой: вы не можете поселить жителя в своем городе, так как нет карт для сброса\r\n                    setmodalAlertIsOpen(true);\r\n                    return;\r\n                }\r\n                else if(response.data.can_play && response.data.cards_hand){\r\n                    // модальное окно с выбором карты, которую надо сбросить\r\n                    setCardsHand(response.data.cards_hand);\r\n                    setCardIdPlay(response.data.card_id_play);\r\n                    setShowCardsHandModal(true);\r\n                    return;\r\n                }\r\n            } catch(error){\r\n                console.error(\"Ошибка при розыгрыше карты в своем городе\",error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCureEpidemic = async (epidemicId) => {\r\n        try {\r\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/cure-epidemic/`, {\r\n                epidemic_id: epidemicId,\r\n            });\r\n\r\n            setShowEpidemicModal(false);\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n            \r\n            action();\r\n            setSelectedCard(null);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при лечении эпидемии:\", error);\r\n        }\r\n    };\r\n\r\n    const handleKillCourt = async (courtCardId) => {\r\n        setShowCourtCardsModal(false);\r\n\r\n        try{\r\n            const responce = await axios.post(`\r\n                http://192.168.1.68:8000/api/rooms/${roomCode}/kill-court/`, \r\n                {\r\n                    'player_id_where_kill': playerIdWhereKill,\r\n                    'id_card_in_deck': courtCardId,\r\n                    'card_description': cardDescription,\r\n                }\r\n            );\r\n\r\n            if(responce.data.next_player && responce.data.prev_player){\r\n                setPeasantCardsOptions([\r\n                    {\r\n                        player_id: responce.data.next_player.id,\r\n                        city_name: responce.data.next_player.city_name,\r\n                        cards: responce.data.next_player.peasant_cards\r\n                    },\r\n                    {\r\n                        player_id: responce.data.prev_player.id,\r\n                        city_name: responce.data.prev_player.city_name,\r\n                        cards: responce.data.prev_player.peasant_cards\r\n                    }\r\n                ]);\r\n                setPlayerIdToMovePeasantCards(responce.data.player_id_to_move);\r\n                setShowPeasantCardsModal(true);\r\n                return;\r\n            }\r\n            else{\r\n                try {\r\n                    await axios.delete(\r\n                        `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                            data: {\r\n                                'player_id': player.id,\r\n                                'id_card_in_deck': card.id,\r\n                            }\r\n                            \r\n                        }\r\n                    );\r\n\r\n                    action();\r\n                    setSelectedCard(null);\r\n                } catch(error){\r\n                    console.error(\"Ошибка при удалении карты с руки: \", error);\r\n                }\r\n            }\r\n        }catch(error){\r\n            console.error(\"Ошибка при удалении карты придворного: \", error);\r\n        }\r\n    };\r\n\r\n    const handleMovePeasantCard = async (peasantCardId, fromPlayerId) => {\r\n        setShowPeasantCardsModal(false);\r\n\r\n        try{\r\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-peasant-card/`, {\r\n                'player_id_from_move': fromPlayerId,\r\n                'player_id_to_move': playerIdToMovePeasantCards,\r\n                'id_card_in_deck': peasantCardId,\r\n            });\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n\r\n                action();\r\n                setSelectedCard(null);\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n\r\n        } catch(error){\r\n            console.error(\"Ошибка при перемещении карты простолюдина: \", error);\r\n        }\r\n    };\r\n\r\n    const handleMoveCard = async(player_id_from_move, card_id) => {\r\n        setShowMonksModal(false);\r\n        setShowCommonerCrusaderCardsModal(false);\r\n\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/move-card/`,\r\n                {\r\n                    'player_id_from_move': player_id_from_move,\r\n                    'player_id_to_move': playerIdToMove,\r\n                    'card_id': card_id\r\n                }\r\n            );\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n\r\n                action();\r\n                setSelectedCard(null);\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n        }catch(error){\r\n            console.error(\"Ошибка при перещении карты Монах: \", error);\r\n        }\r\n    };\r\n\r\n    const handleChoiseCardToMove = async(group) => {\r\n        setShowAvailableGroupsModal(false);\r\n        \r\n        const response = await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/choise-card-to-move/`,\r\n            {\r\n                'next_player_id': nextPlayer.player_id,\r\n                'prev_player_id': prevPlayer.player_id,\r\n                'card_group': group\r\n            }\r\n        );\r\n\r\n        if(response.data.cards_group_neighbors){\r\n            setCardsGroupNeighbors(response.data.cards_group_neighbors);\r\n            setShowCardsGroupNeighborsModal(true);\r\n        }\r\n    };\r\n\r\n    const handleSwapCards = async(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id) => {\r\n        await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/swap-cards/`,\r\n            {\r\n                'next_player_id': next_player_id,\r\n                'next_player_card_id': next_player_card_id,\r\n                'prev_player_id': prev_player_id,\r\n                'prev_player_card_id': prev_player_card_id\r\n            }\r\n        );\r\n\r\n        try {\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        } catch(error){\r\n            console.error(\"Ошибка при удалении карты с руки: \", error);\r\n        }\r\n    };\r\n\r\n    const handleChoiseCourtKill = async(player_id) => {\r\n        setShowPlayersWithCourtModal(false);\r\n\r\n        const responce = await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/choise-court-kill/`,\r\n            {\r\n                'player_id': player_id\r\n            }\r\n        );\r\n\r\n        if(responce.data.court_cards){\r\n            setCourtCardsOptions(responce.data.court_cards);\r\n            setShowCourtCardsModal(true);\r\n            setPlayerIdWhereKill(responce.data.player_id_where_kill);\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleDeleteCardAndGetCrusadePoints = async (card_id) => {\r\n        setShowAllPlayedCardsModal(false);\r\n\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/delete-card-and-get-crusade-points/`,\r\n                {\r\n                    'player_id': playerIdWhereKill,\r\n                    'card_id': card_id\r\n                }\r\n            );\r\n\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n            \r\n        } catch(error){\r\n            console.error(\"Ошибка при удалении карты и получении ко: \", error);\r\n        }\r\n    };\r\n\r\n    const handleStealCrusadePoints = async (pl_id) => {\r\n        setShowPlayersHaveCrusadePointsModal(false);\r\n\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/steal-crusade-points/`,\r\n                {\r\n                    'player_id_from': pl_id,\r\n                    'player_id_to': playerIdToMove,\r\n                }\r\n            );\r\n\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        } catch(error){\r\n            console.error(\"Ошибка при воровстве ко: \", error);\r\n        }\r\n    };\r\n\r\n    const handleSendCourtCrusaderNeighbor = async (player_id_from, card_id) => {\r\n        setShowCourtCrusaderNeighborModal(false);\r\n\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/send-court-crusade/`,\r\n                {\r\n                    'player_id_from': player_id_from,\r\n                    'card_id': card_id,\r\n                    'player_id_to': playerIdToMove\r\n                }\r\n            );\r\n\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        }catch(error){\r\n            console.error(\"Ошибка при отправке придворного в крестовый поход: \", error);\r\n        }\r\n    };\r\n\r\n    const handleResetCard = async(card_id) => {\r\n        setShowCardsHandModal(false);\r\n        await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/reset-card/play-require-discard-to-settle/`,\r\n            {\r\n                'card_id': card_id,\r\n                'player_id': player.id,\r\n                'card_id_play': cardIdPlay\r\n            }\r\n        );\r\n        action();\r\n        setSelectedCard(null);\r\n    };\r\n\r\n    if(isSpecial){\r\n        return (\r\n            <PlayingSpecialCards \r\n                roomCode = {roomCode} \r\n                card = {card} \r\n                setIsSpecial = {setIsSpecial}\r\n            />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Modal\r\n            isOpen={modalAlertIsOpen}\r\n            onRequestClose={() => setmodalAlertIsOpen(false)}\r\n            contentLabel=\"Уведомление\"\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-overlay\"\r\n            >\r\n            <h2>Карту нельзя разыграть в своем городе, так как нет карт для сброса</h2>\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showEpidemicModal} \r\n        onRequestClose={() => setShowEpidemicModal(false)}\r\n        >\r\n            <h2>Выберите эпидемию для лечения:</h2>\r\n            {epidemicOptions.map(ep => (\r\n                <button key={ep.id} onClick={() => handleCureEpidemic(ep.id)}>\r\n                <p>{ep.name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showCardsHandModal} \r\n        onRequestClose={() => setShowCardsHandModal(false)}\r\n        >\r\n            <h2>Выберите карту, которую хотите сбросить:</h2>\r\n            {cardsHand.map(card_hand => (\r\n                <button key={card_hand.card_id} onClick={() => handleResetCard(card_hand.card_id)}>\r\n                <p>{card_hand.card_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showCourtCardsModal} \r\n        onRequestClose={() => setShowCourtCardsModal(false)}\r\n        >\r\n            <h2>Выберите придворного, которого хотите убить:</h2>\r\n            {courtCardsOptions.map(court_card => (\r\n                <button key={court_card.id} onClick={() => handleKillCourt(court_card.id)}>\r\n                <p>{court_card.name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showCourtCrusaderNeighborModal} \r\n        onRequestClose={() => setShowCourtCrusaderNeighborModal(false)}\r\n        >\r\n            <h2>Выберите придворного, которого хотите отправить в крестовый поход:</h2>\r\n            {courtCrusaderNeighbor.map(court_card => (\r\n                <button key={court_card.card_id} onClick={() => handleSendCourtCrusaderNeighbor(court_card.player_id, court_card.card_id)}>\r\n                <p>{court_card.card_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showAllPlayedCardsModal} \r\n        onRequestClose={() => setShowAllPlayedCardsModal(false)}\r\n        >\r\n            <h2>Выберите карту, которую хотите сбросить:</h2>\r\n            {allPlayedCards.map(played_card => (\r\n                <button key={played_card.card_id} onClick={() => handleDeleteCardAndGetCrusadePoints(played_card.card_id)}>\r\n                <p>{played_card.card_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n            isOpen={showPeasantCardsModal} \r\n            onRequestClose={() => setShowPeasantCardsModal(false)}\r\n        >\r\n            <h2>Выберите по одному простолюдину из соседних городов:</h2>\r\n            {peasantCardsOptions.map((source) => (\r\n                <div>\r\n                    <h3>Город: {source.city_name}</h3>\r\n                    {source.cards.map((card)=>(\r\n                        <label key={card.id}>\r\n                            <input \r\n                                type=\"radio\" \r\n                                name={source.player_id} \r\n                                value={card.id}\r\n                                onChange={() => {\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                        ...prev,\r\n                                        [source.player_id]: card.id\r\n                                    }));\r\n                                }}\r\n                            />\r\n                            {card.name}\r\n                        </label>\r\n                    ))}\r\n                        \r\n                </div>\r\n            ))}\r\n            <button \r\n                onClick={() => {\r\n                    Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\r\n                        handleMovePeasantCard(card_id, player_id);\r\n                    });\r\n                    setShowPeasantCardsModal(false);\r\n                }}\r\n            >\r\n                <p>Переместить</p>\r\n            </button>\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showMonksModal} \r\n        onRequestClose={() => setShowMonksModal(false)}\r\n        >\r\n            <h2>Выберите город, из которого хотите переманить Монаха:</h2>\r\n            {monksOptions.map(monk => (\r\n                <button key={monk.other_player_id} onClick={() => handleMoveCard(monk.other_player_id, monk.id_card_in_deck)}>\r\n                <p>{monk.other_player_city_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showPlayersHaveCrusadePointsModal} \r\n        onRequestClose={() => setShowPlayersHaveCrusadePointsModal(false)}\r\n        >\r\n            <h2>Выберите город, из которого хотите своровать крестовые очки:</h2>\r\n            {playersHaveCrusadePoints.map(pl => (\r\n                <button key={pl.player_id} onClick={() => handleStealCrusadePoints(pl.player_id)}>\r\n                <p>{pl.player_city_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showCommonerCrusaderCardsModal} \r\n        onRequestClose={() => setShowCommonerCrusaderCardsModal(false)}\r\n        >\r\n            <h2>Выберите карту простолюдина крестоносца, которую хотите переместить:</h2>\r\n            {commonerCrusaderCardsOptions.map(card => (\r\n                <button key={card.card_id} onClick={() => handleMoveCard(card.player_id, card.card_id)}>\r\n                <p>{card.card_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showAvailableGroupsModal} \r\n        onRequestClose={() => setShowAvailableGroupsModal(false)}\r\n        >\r\n            <h2>Выбери сословие для обмена жителями между соседними городами {prevPlayer.player_city_name} и {nextPlayer.player_city_name}:</h2>\r\n            {availableGroups.map((group, i) => (\r\n                <button key={i} onClick={() => handleChoiseCardToMove(group.value)}>\r\n                <p>{group.label}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n            isOpen={showCardsGroupNeighborsModal} \r\n            onRequestClose={() => setShowCardsGroupNeighborsModal(false)}\r\n        >\r\n            {cardsGroupNeighbors ? (\r\n                <>\r\n                    <h2>Выберите по одной карте из соседних городов:</h2>\r\n                    <div>\r\n                        <h3>Город: {cardsGroupNeighbors.next_player.player_city_name}</h3>\r\n                        {cardsGroupNeighbors.next_player.cards.map(c => (\r\n                            <label key={c.card_id}>\r\n                                <input\r\n                                type=\"radio\"\r\n                                name={cardsGroupNeighbors.next_player.player_id}\r\n                                value={c.card_id}\r\n                                onChange={() =>\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                    ...prev,\r\n                                    [cardsGroupNeighbors.next_player.player_id]: c.card_id\r\n                                    }))\r\n                                }\r\n                                />\r\n                                {c.card_name}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Город: {cardsGroupNeighbors.prev_player.player_city_name}</h3>\r\n                        {cardsGroupNeighbors.prev_player.cards.map(c => (\r\n                            <label key={c.card_id}>\r\n                                <input\r\n                                type=\"radio\"\r\n                                name={cardsGroupNeighbors.prev_player.player_id}\r\n                                value={c.card_id}\r\n                                onChange={() =>\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                    ...prev,\r\n                                    [cardsGroupNeighbors.prev_player.player_id]: c.card_id\r\n                                    }))\r\n                                }\r\n                                />\r\n                                {c.card_name}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                    <button \r\n                        onClick={() => {\r\n                            setShowCardsGroupNeighborsModal(false);\r\n                            const next_player_id = cardsGroupNeighbors.next_player.player_id;\r\n                            const prev_player_id = cardsGroupNeighbors.prev_player.player_id;\r\n\r\n                            const next_player_card_id = selectedCardsRadio[next_player_id];\r\n                            const prev_player_card_id = selectedCardsRadio[prev_player_id];\r\n\r\n                            if (next_player_id && prev_player_id && next_player_card_id && prev_player_card_id) {\r\n                                handleSwapCards(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id);\r\n                            }\r\n                            else{\r\n                                alert(`next_player_id= ${next_player_id}, prev_player_id=${prev_player_id}, next_player_card_id=${next_player_card_id}, prev_player_card_id=${prev_player_card_id}`)\r\n                            }\r\n                        }}\r\n                    >\r\n                        <p>Поменять местами</p>\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <div>Загрузка данных</div>\r\n            )}\r\n            \r\n        </Modal>\r\n\r\n\r\n        <Modal \r\n        isOpen={showCardsWomenNeighborsModal} \r\n        onRequestClose={() => setShowCardsWomenNeighborsModal(false)}\r\n        >\r\n        {cardsWomenNeighbors &&\r\n        cardsWomenNeighbors.next_player &&\r\n        cardsWomenNeighbors.prev_player ? (\r\n            <>\r\n            <h2>Выберите по одной женщине из соседних городов:</h2>\r\n\r\n            <div>\r\n                <h3>Город: {cardsWomenNeighbors.next_player.player_city_name}</h3>\r\n                {cardsWomenNeighbors.next_player.cards.map(c => (\r\n                <label key={c.card_id}>\r\n                    <input\r\n                    type=\"radio\"\r\n                    name={cardsWomenNeighbors.next_player.player_id}\r\n                    value={c.card_id}\r\n                    onChange={() =>\r\n                        setSelectedCardsRadio(prev => ({\r\n                        ...prev,\r\n                        [cardsWomenNeighbors.next_player.player_id]: c.card_id,\r\n                        }))\r\n                    }\r\n                    />\r\n                    {c.card_name}\r\n                </label>\r\n                ))}\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Город: {cardsWomenNeighbors.prev_player.player_city_name}</h3>\r\n                {cardsWomenNeighbors.prev_player.cards.map(c => (\r\n                <label key={c.card_id}>\r\n                    <input\r\n                    type=\"radio\"\r\n                    name={cardsWomenNeighbors.prev_player.player_id}\r\n                    value={c.card_id}\r\n                    onChange={() =>\r\n                        setSelectedCardsRadio(prev => ({\r\n                        ...prev,\r\n                        [cardsWomenNeighbors.prev_player.player_id]: c.card_id,\r\n                        }))\r\n                    }\r\n                    />\r\n                    {c.card_name}\r\n                </label>\r\n                ))}\r\n            </div>\r\n\r\n            <button\r\n                onClick={() => {\r\n                Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\r\n                    handleMoveCard(player_id, card_id);\r\n                });\r\n                setShowPeasantCardsModal(false);\r\n                }}\r\n            >\r\n                <p>Переместить</p>\r\n            </button>\r\n            </>\r\n        ) : (\r\n            <div>Загрузка данных...</div>\r\n        )}\r\n        </Modal>\r\n\r\n\r\n\r\n        <Modal \r\n        isOpen={showPlayersWithCourtModal} \r\n        onRequestClose={() => setShowPlayersWithCourtModal(false)}\r\n        >\r\n            <h2>Выбери город, в котором хочешь убить придворного:</h2>\r\n            {playersWithCourt.map((pl, i) => (\r\n                <button key={i} onClick={() => handleChoiseCourtKill(pl.other_player_id)}>\r\n                <p>{pl.other_player_city_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n          \r\n        <div className='playing-cards'>\r\n            <h2>Выберите город, в котором хотите разыграть <span className='accent'>{card.name}</span>:</h2>\r\n            <div className='list-players'>\r\n                {card.card_data.play_only_in_own_city ? (\r\n                    <div\r\n                    className='item-player'\r\n                    key = {player.id}\r\n                    onClick={() => {handleClickItem(player)}}>\r\n                        {player.city_name}\r\n                    </div>\r\n                ) : (\r\n                    (players.length > 0) ? (\r\n                        players.map((value, i) => (\r\n                            <div \r\n                            className='item-player' \r\n                            key={i}\r\n                            onClick={() => {handleClickItem(value)}}>\r\n                                {value.city_name}\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>Загрузка данных...</div>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayingCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}