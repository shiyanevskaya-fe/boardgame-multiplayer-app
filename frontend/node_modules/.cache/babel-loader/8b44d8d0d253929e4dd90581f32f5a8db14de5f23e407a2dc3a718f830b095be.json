{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\ConnectionScreen.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styles/ConnectionScreen.css';\nimport Button from './Button.js';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionScreen = () => {\n  _s();\n  const [roomData, setRoomData] = useState(null);\n  useEffect(() => {\n    let hostId = localStorage.getItem('host_id');\n    if (!hostId) {\n      hostId = uuidv4();\n      localStorage.setItem('host_id', hostId);\n    }\n    axios.post('http://127.0.0.1:8000/api/rooms/create/', {\n      host: hostId\n    }).then(response => {\n      console.log(\"Ответ от бэкенда:\", response.data);\n      setRoomData(response.data);\n    }).catch(error => {\n      console.error(\"Ошибка создания комнаты\", error);\n    });\n  }, []);\n\n  //   return (\n  //     <div className=\"Connection\">\n  //       {roomData ? (\n  //         <div>\n  //           <h2>Комната создана!</h2>\n  //           <p>Код комнаты: {roomData.code}</p>\n  //           <p>Ссылка: http://localhost:3000/join/{roomData.code}</p>\n  //           {/* QR-код можно добавить позже */}\n  //         </div>\n  //       ) : (\n  //         <p>Создание комнаты...</p>\n  //       )}\n  //       <ConnectionScreen />\n  //     </div>\n  //   );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"connection-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connectiom-method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"waiting-room\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"players-panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ConnectionScreen, \"0P1Qcn9Bf7CCk+IL3CfA7tgD104=\");\n_c = ConnectionScreen;\nexport default ConnectionScreen;\nvar _c;\n$RefreshReg$(_c, \"ConnectionScreen\");","map":{"version":3,"names":["React","Button","useEffect","useState","axios","v4","uuidv4","jsxDEV","_jsxDEV","ConnectionScreen","_s","roomData","setRoomData","hostId","localStorage","getItem","setItem","post","host","then","response","console","log","data","catch","error","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","text","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/ConnectionScreen.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/ConnectionScreen.css';\r\nimport Button from './Button.js';\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst ConnectionScreen = () => {\r\n    const [roomData, setRoomData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let hostId = localStorage.getItem('host_id');\r\n\r\n    if (!hostId) {\r\n      hostId = uuidv4();\r\n      localStorage.setItem('host_id', hostId);\r\n    }\r\n\r\n    axios.post('http://127.0.0.1:8000/api/rooms/create/', {\r\n      host: hostId\r\n    })\r\n    .then(response => {\r\n      console.log(\"Ответ от бэкенда:\", response.data);\r\n      setRoomData(response.data);\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Ошибка создания комнаты\", error);\r\n    });\r\n  }, []);\r\n\r\n\r\n//   return (\r\n//     <div className=\"Connection\">\r\n//       {roomData ? (\r\n//         <div>\r\n//           <h2>Комната создана!</h2>\r\n//           <p>Код комнаты: {roomData.code}</p>\r\n//           <p>Ссылка: http://localhost:3000/join/{roomData.code}</p>\r\n//           {/* QR-код можно добавить позже */}\r\n//         </div>\r\n//       ) : (\r\n//         <p>Создание комнаты...</p>\r\n//       )}\r\n//       <ConnectionScreen />\r\n//     </div>\r\n//   );\r\n    return(\r\n        <div id=\"connection-screen\">\r\n            <div className='info-block'>\r\n                <div className='connectiom-method'>\r\n\r\n                </div>\r\n\r\n                <div className='waiting-room'>\r\n                    <div className='players-panel'>\r\n\r\n                    </div>\r\n                    <Button text=\"Начать\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConnectionScreen;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gCAAgC;AACvC,OAAOC,MAAM,MAAM,aAAa;AAChC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAE5C,IAAI,CAACF,MAAM,EAAE;MACXA,MAAM,GAAGP,MAAM,CAAC,CAAC;MACjBQ,YAAY,CAACE,OAAO,CAAC,SAAS,EAAEH,MAAM,CAAC;IACzC;IAEAT,KAAK,CAACa,IAAI,CAAC,yCAAyC,EAAE;MACpDC,IAAI,EAAEL;IACR,CAAC,CAAC,CACDM,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC/CX,WAAW,CAACQ,QAAQ,CAACG,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI,oBACIjB,OAAA;IAAKkB,EAAE,EAAC,mBAAmB;IAAAC,QAAA,eACvBnB,OAAA;MAAKoB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBnB,OAAA;QAAKoB,SAAS,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7B,CAAC,eAENxB,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAD,QAAA,gBACzBnB,OAAA;UAAKoB,SAAS,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEzB,CAAC,eACNxB,OAAA,CAACP,MAAM;UAACgC,IAAI,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAtB,EAAA,CAvDKD,gBAAgB;AAAAyB,EAAA,GAAhBzB,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}