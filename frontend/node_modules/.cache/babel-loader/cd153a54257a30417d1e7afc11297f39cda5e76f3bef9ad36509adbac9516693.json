{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayerTurn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/PlayerTurn.css\";\nimport axios from 'axios';\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerTurn = ({\n  player,\n  roomCode\n}) => {\n  _s();\n  const [topCard, setTopCard] = useState(null);\n  const [selectedCard, setSelectedCard] = useState(null);\n  useEffect(() => {\n    const fetchCard = async () => {\n      try {\n        const response_top_card = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\n        setTopCard(response_top_card.data);\n      } catch (error) {\n        console.error(\"Ошибка получения верхней карты из колоды\", error);\n      }\n    };\n    fetchCard();\n  }, [roomCode]);\n  const handleCardSelect = card => {\n    setSelectedCard(card);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-turn\",\n    children: !selectedCard ? /*#__PURE__*/_jsxDEV(SelectFromCrossRoad, {\n      roomCode: roomCode,\n      onCardSelect: handleCardSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0412\\u044B\\u0431\\u043E\\u0440 \\u043A\\u0430\\u043A\\u0443\\u044E \\u043A\\u0430\\u0440\\u0442\\u0443 \\u0441\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerTurn, \"CMUm9uSeEetktxi4hM4PYf/2wKY=\");\n_c = PlayerTurn;\nexport default PlayerTurn;\nvar _c;\n$RefreshReg$(_c, \"PlayerTurn\");","map":{"version":3,"names":["React","useEffect","useState","axios","SelectFromCrossRoad","PlayerCardsDisplay","jsxDEV","_jsxDEV","PlayerTurn","player","roomCode","_s","topCard","setTopCard","selectedCard","setSelectedCard","fetchCard","response_top_card","get","data","error","console","handleCardSelect","card","className","children","onCardSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayerTurn.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"../styles/PlayerTurn.css\";\r\nimport axios from 'axios';\r\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\r\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\r\n\r\nconst PlayerTurn = ({ player, roomCode }) => {\r\n    const [topCard, setTopCard] = useState(null);\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchCard = async () => {\r\n            try {\r\n              const response_top_card = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\r\n              setTopCard(response_top_card.data);\r\n            } catch (error) {\r\n              console.error(\"Ошибка получения верхней карты из колоды\", error);\r\n            }\r\n        };\r\n\r\n        fetchCard();\r\n\r\n    }, [roomCode]);\r\n\r\n    const handleCardSelect = (card) => {\r\n        setSelectedCard(card);\r\n    };\r\n\r\n    return (\r\n        <div className=\"player-turn\">\r\n            {!selectedCard ? (\r\n                <SelectFromCrossRoad \r\n                    roomCode = {roomCode}\r\n                    onCardSelect={handleCardSelect}\r\n                />\r\n            ) : (\r\n                <div>Выбор какую карту сыграть</div>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default PlayerTurn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,0BAA0B;AAC1D,OAAOC,kBAAkB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAGtDD,SAAS,CAAC,MAAM;IACZ,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,iBAAiB,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,2CAA2CR,QAAQ,OAAO,CAAC;QACrGG,UAAU,CAACI,iBAAiB,CAACE,IAAI,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACJ,CAAC;IAEDJ,SAAS,CAAC,CAAC;EAEf,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;IAC/BR,eAAe,CAACQ,IAAI,CAAC;EACzB,CAAC;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,EACvB,CAACX,YAAY,gBACVP,OAAA,CAACH,mBAAmB;MAChBM,QAAQ,EAAIA,QAAS;MACrBgB,YAAY,EAAEJ;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,gBAEFvB,OAAA;MAAAkB,QAAA,EAAK;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACtC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEZ,CAAC;AAACnB,EAAA,CApCEH,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}