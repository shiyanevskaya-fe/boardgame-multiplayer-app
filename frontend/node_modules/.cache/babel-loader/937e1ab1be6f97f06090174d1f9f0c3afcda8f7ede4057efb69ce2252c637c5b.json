{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayerTurn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/PlayerTurn.css\";\nimport axios from 'axios';\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerTurn = ({\n  player,\n  roomCode\n}) => {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [handCards, setHandCards] = useState([]);\n  const fetchTurn = async () => {\n    try {\n      const response_player_status = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/status/`, {\n        'room_code': roomCode,\n        'player_id': player.id\n      });\n      const player_status = response_player_status.data;\n      setStatus(player_status);\n      try {\n        const response_player_hand = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/hand/`);\n        const playerHand = response_player_hand.data;\n        setHandCards(playerHand);\n        if (player_status === \"set_cards\") {\n          if (playerHand.length === 0) {\n            try {\n              const response_top_card_from_deck = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\n              const top_card_from_deck = response_top_card_from_deck.data;\n              try {\n                await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/add-hand-card/${top_card_from_deck.id}/`, {\n                  'id_card_in_deck': top_card_from_deck.id_card_in_deck\n                });\n              } catch (error) {\n                console.error(\"Ошибка при добавлении карты:\", error);\n              }\n            } catch (error_top_card) {\n              console.error(\"Ошибка при получении верхней карты из колоды:\", error_top_card);\n            }\n          }\n        }\n      } catch (error_hand) {\n        console.error(\"Ошибка получения карт игрока:\", error_hand);\n      }\n    } catch (error_player_status) {\n      console.error(\"Ошибка при получении статуса игрока: \", error_player_status);\n    }\n  };\n  useEffect(() => {\n    fetchTurn();\n  }, [roomCode, player.id]);\n  const handleCardSelect = async () => {\n    await fetchTurn();\n  };\n  if (status === \"set_cards\") {\n    return /*#__PURE__*/_jsxDEV(SelectFromCrossRoad, {\n      roomCode: roomCode,\n      onCardSelect: handleCardSelect,\n      player: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n  if (status === \"playing_cards\") {\n    return /*#__PURE__*/_jsxDEV(PlayerCardsDisplay, {\n      cards: handCards,\n      roomCode: roomCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-turn\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerTurn, \"Wp1YcgA2hjPiQoAb06WO00uV08A=\");\n_c = PlayerTurn;\nexport default PlayerTurn;\nvar _c;\n$RefreshReg$(_c, \"PlayerTurn\");","map":{"version":3,"names":["React","useEffect","useState","axios","SelectFromCrossRoad","PlayerCardsDisplay","jsxDEV","_jsxDEV","PlayerTurn","player","roomCode","_s","status","setStatus","handCards","setHandCards","fetchTurn","response_player_status","post","id","player_status","data","response_player_hand","get","playerHand","length","response_top_card_from_deck","top_card_from_deck","id_card_in_deck","error","console","error_top_card","error_hand","error_player_status","handleCardSelect","onCardSelect","fileName","_jsxFileName","lineNumber","columnNumber","cards","className","children","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayerTurn.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"../styles/PlayerTurn.css\";\r\nimport axios from 'axios';\r\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\r\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\r\n\r\nconst PlayerTurn = ({ player, roomCode }) => {\r\n    const [status, setStatus] = useState(null);\r\n    const [handCards, setHandCards] = useState([]);\r\n\r\n    const fetchTurn = async () => {\r\n        try {\r\n            const response_player_status = await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/status/`,\r\n                {\r\n                    'room_code': roomCode,\r\n                    'player_id': player.id\r\n                }\r\n            );\r\n\r\n            const player_status = response_player_status.data;\r\n            setStatus(player_status);\r\n\r\n            try{\r\n                const response_player_hand = await axios.get(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/hand/`\r\n                );\r\n    \r\n                const playerHand = response_player_hand.data;\r\n                setHandCards(playerHand);\r\n\r\n                if(player_status === \"set_cards\"){\r\n                    if(playerHand.length === 0){\r\n                        try {\r\n                            const response_top_card_from_deck = await axios.get(\r\n                                `http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`\r\n                            );\r\n        \r\n                            const top_card_from_deck = response_top_card_from_deck.data;\r\n        \r\n                            try {\r\n                                await axios.post(\r\n                                    `http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/add-hand-card/${top_card_from_deck.id}/`, {\r\n                                        'id_card_in_deck': top_card_from_deck.id_card_in_deck,\r\n                                    }\r\n                                ); \r\n                            } catch(error){\r\n                                console.error(\"Ошибка при добавлении карты:\", error);\r\n                            }\r\n                        } catch(error_top_card){\r\n                            console.error(\"Ошибка при получении верхней карты из колоды:\", error_top_card);\r\n                        }\r\n                    }\r\n                }\r\n            } catch(error_hand){\r\n                console.error(\"Ошибка получения карт игрока:\", error_hand);\r\n            }\r\n        } catch(error_player_status){\r\n            console.error(\"Ошибка при получении статуса игрока: \", error_player_status);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTurn();\r\n    }, [roomCode, player.id]);\r\n\r\n    const handleCardSelect = async() => {\r\n        await fetchTurn();\r\n    };\r\n\r\n    if(status === \"set_cards\"){\r\n        return(\r\n            <SelectFromCrossRoad\r\n                roomCode={roomCode}\r\n                onCardSelect={handleCardSelect}\r\n                player={player}\r\n            />\r\n        )\r\n    }\r\n\r\n    if(status === \"playing_cards\"){\r\n        return(\r\n            <PlayerCardsDisplay \r\n                cards={handCards} \r\n                roomCode = {roomCode}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"player-turn\">\r\n            <div>Загрузка данных...</div>\r\n        </div>\r\n    );\r\n}\r\n  \r\n\r\nexport default PlayerTurn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}