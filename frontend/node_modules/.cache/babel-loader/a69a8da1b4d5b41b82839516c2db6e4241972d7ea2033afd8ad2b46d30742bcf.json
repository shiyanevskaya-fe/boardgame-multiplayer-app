{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayersCity.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/PlayersCity.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayersCity = ({\n  player,\n  isCurrent,\n  roomCode\n}) => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [cardsActiveEpidemic, setCardsActiveEpidemic] = useState([]);\n  const fetchPlayedCard = async () => {\n    try {\n      const played_cards = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/played-cards/`, {\n        'player_id': player.id\n      });\n      setCards(played_cards.data);\n      console.log(played_cards.data);\n    } catch (error) {\n      console.error(\"Ошибка при получении сыгранных карт в городе\", error);\n    }\n  };\n  useEffect(() => {\n    const socket = new WebSocket(`ws://192.168.1.68:8000/ws/rooms/${roomCode}/`);\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.action === \"changed_played_cards\") {\n        if (data.payload.id === player.id) {\n          setCards(data.payload.played_cards);\n          console.log(data.payload);\n          setCardsActiveEpidemic(data.payload.epidemics);\n        }\n      }\n    };\n    fetchPlayedCard();\n    return () => {\n      socket.close();\n    };\n  }, [roomCode, player.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `players-city ${isCurrent ? \"current-player\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-name\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name-city\",\n        children: player.city_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hotbed_epidemic\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./images/hotbed_leprosy.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epidemic-maps\",\n        children: cards.filter(card => card.card_data.card_group_in_deck === 'epidemic').map((card, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_data.image,\n          alt: \"\"\n        }, `epedemic-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maps-residents\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"courtiers\",\n          children: cards.filter(card => card.card_data.card_group_in_deck === 'court').map((card, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_data.image,\n            alt: \"\"\n          }, `courtiers-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"priests\",\n          children: cards.filter(card => card.card_data.card_group_in_deck === 'priest').map((card, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_data.image,\n            alt: \"\"\n          }, `priests-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commoners\",\n          children: cards.filter(card => card.card_data.card_group_in_deck === 'peasant').map((card, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.card_data.image,\n            alt: \"\"\n          }, `commoners-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(PlayersCity, \"q+QV4yxjjd+i6dPA7A9SakLl2W0=\");\n_c = PlayersCity;\nexport default PlayersCity;\nvar _c;\n$RefreshReg$(_c, \"PlayersCity\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PlayersCity","player","isCurrent","roomCode","_s","cards","setCards","cardsActiveEpidemic","setCardsActiveEpidemic","fetchPlayedCard","played_cards","post","id","data","console","log","error","socket","WebSocket","onmessage","event","JSON","parse","action","payload","epidemics","close","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","city_name","src","filter","card","card_data","card_group_in_deck","map","i","image","alt","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayersCity.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"../styles/PlayersCity.css\";\r\nimport axios from 'axios';\r\n\r\nconst PlayersCity = ({ player, isCurrent, roomCode }) => {\r\n  const [cards, setCards] = useState([]);\r\n  const [cardsActiveEpidemic, setCardsActiveEpidemic] = useState([]);\r\n\r\n  const fetchPlayedCard = async() => {\r\n    try{\r\n      const played_cards = await axios.post(\r\n      `http://192.168.1.68:8000/api/rooms/${roomCode}/player/played-cards/`,{\r\n        'player_id': player.id\r\n      });\r\n      setCards(played_cards.data);\r\n      console.log(played_cards.data);\r\n    } catch(error){\r\n      console.error(\"Ошибка при получении сыгранных карт в городе\", error);\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(()=>{\r\n    const socket = new WebSocket(`ws://192.168.1.68:8000/ws/rooms/${roomCode}/`);\r\n    socket.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n        if (data.action === \"changed_played_cards\") {\r\n          if(data.payload.id === player.id){\r\n            setCards(data.payload.played_cards);\r\n            console.log(data.payload);\r\n            setCardsActiveEpidemic(data.payload.epidemics);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchPlayedCard();\r\n\r\n    return () => {\r\n      socket.close();\r\n    };\r\n}, [roomCode, player.id]);\r\n\r\n    return (\r\n      <div className={`players-city ${isCurrent ? \"current-player\" : \"\"}`}>\r\n        <div className='players-info'>\r\n            <div className='player-name'>{player.name}</div>\r\n            <div className='name-city'>{player.city_name}</div>\r\n            {/* {(cardsActiveEpidemic != null) ? (\r\n                cardsActiveEpidemic.map((card_epidemic, i)=>(\r\n                    (card_epidemic.hotbed_city === player.id ? (\r\n                        <img src={card_epidemic.hotbed_image}/>\r\n                    ) : (\r\n                        <div></div>\r\n                    ))\r\n                ))\r\n            ) : (\r\n                <div></div>\r\n            )} */}\r\n            <div className='hotbed_epidemic'>\r\n                <img src='./images/hotbed_leprosy.png'/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        <div className='city-info'>\r\n            <div className='epidemic-maps'>\r\n                {cards\r\n                .filter(card => card.card_data.card_group_in_deck === 'epidemic')\r\n                .map((card, i) => (\r\n                    <img key={`epedemic-${i}`} src={card.card_data.image} alt=\"\" />\r\n                ))}\r\n            </div>\r\n\r\n            <div className='maps-residents'>\r\n                <div className='courtiers'>\r\n                    {cards\r\n                    .filter(card => card.card_data.card_group_in_deck === 'court')\r\n                    .map((card, i) => (\r\n                        <img key={`courtiers-${i}`} src={card.card_data.image} alt=\"\" />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='priests'>\r\n                    {cards\r\n                    .filter(card => card.card_data.card_group_in_deck === 'priest')\r\n                    .map((card, i) => (\r\n                        <img key={`priests-${i}`} src={card.card_data.image} alt=\"\" />\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='commoners'>\r\n                    {cards\r\n                    .filter(card => card.card_data.card_group_in_deck === 'peasant')\r\n                    .map((card, i) => (\r\n                        <img key={`commoners-${i}`} src={card.card_data.image} alt=\"\" />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n  \r\n\r\nexport default PlayersCity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}