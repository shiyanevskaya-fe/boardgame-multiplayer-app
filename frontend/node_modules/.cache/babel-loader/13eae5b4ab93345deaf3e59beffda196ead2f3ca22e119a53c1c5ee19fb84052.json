{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayingCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/PlayingCards.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayingCards = ({\n  roomCode,\n  card\n}) => {\n  _s();\n  const player = JSON.parse(localStorage.getItem('player'));\n  const [players, setPlayers] = useState([]);\n  const fetchPlayers = async () => {\n    try {\n      const response_players = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/`);\n      setPlayers(response_players.data);\n    } catch (error) {\n      console.error(\"Ошибка получения пользователей:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPlayers();\n  }, [roomCode, player.id]);\n  const handleClickItem = async pl => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`, {\n        'player_id': pl.id,\n        'id_card_in_deck': card.id_card_in_deck\n      });\n    } catch (error) {\n      console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\n    }\n    // пост запрос на бэк: найти игрока pl в комнате с roomCode в карту города добавить карту card\n    // удалить карту с руки\n    // вернуться на предыдущий экран: setSelectedCard(null)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playing-cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"accent\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 60\n      }, this), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-players\",\n      children: players.length > 0 ? players.map((value, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-player\",\n        onClick: () => {\n          handleClickItem(value);\n        },\n        children: value.city_name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayingCards, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n_c = PlayingCards;\nexport default PlayingCards;\nvar _c;\n$RefreshReg$(_c, \"PlayingCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PlayingCards","roomCode","card","_s","player","JSON","parse","localStorage","getItem","players","setPlayers","fetchPlayers","response_players","get","data","error","console","id","handleClickItem","pl","post","id_card_in_deck","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","value","i","onClick","city_name","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayingCards.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"../styles/PlayingCards.css\";\r\nimport axios from 'axios';\r\n\r\nconst PlayingCards = ({roomCode, card}) => {\r\n    const player = JSON.parse(localStorage.getItem('player'));\r\n\r\n    const [players, setPlayers] = useState([]);\r\n\r\n    const fetchPlayers = async() => {\r\n        try {\r\n            const response_players = await axios.get(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/`\r\n            );\r\n\r\n            setPlayers(response_players.data);\r\n        } catch(error){\r\n            console.error(\"Ошибка получения пользователей:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n    }, [roomCode, player.id]);\r\n\r\n    const handleClickItem = async(pl) => {\r\n        try {\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`,{\r\n                    'player_id': pl.id,\r\n                    'id_card_in_deck': card.id_card_in_deck,\r\n                }\r\n            );\r\n        } catch(error){\r\n            console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\r\n        }\r\n        // пост запрос на бэк: найти игрока pl в комнате с roomCode в карту города добавить карту card\r\n        // удалить карту с руки\r\n        // вернуться на предыдущий экран: setSelectedCard(null)\r\n    };\r\n\r\n    return(\r\n        <div className='playing-cards'>\r\n            <h2>Выберите город, в котором хотите разыграть <span className='accent'>{card.name}</span>:</h2>\r\n            <div className='list-players'>\r\n                {(players.length > 0) ? (\r\n                    players.map((value, i) => (\r\n                        <div \r\n                            className='item-player' \r\n                            key={i}\r\n                            onClick={() => {handleClickItem(value)}}\r\n                        >\r\n                            {value.city_name}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>Загрузка данных...</div>\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayingCards;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAMC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;EAEzD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAW;IAC5B,IAAI;MACA,MAAMC,gBAAgB,GAAG,MAAMf,KAAK,CAACgB,GAAG,CACpC,sCAAsCZ,QAAQ,WAClD,CAAC;MAEDS,UAAU,CAACE,gBAAgB,CAACE,IAAI,CAAC;IACrC,CAAC,CAAC,OAAMC,KAAK,EAAC;MACVC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IAC3D;EACJ,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACZe,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,CAACV,QAAQ,EAAEG,MAAM,CAACa,EAAE,CAAC,CAAC;EAEzB,MAAMC,eAAe,GAAG,MAAMC,EAAE,IAAK;IACjC,IAAI;MACA,MAAMtB,KAAK,CAACuB,IAAI,CACZ,sCAAsCnB,QAAQ,0BAA0B,EAAC;QACrE,WAAW,EAAEkB,EAAE,CAACF,EAAE;QAClB,iBAAiB,EAAEf,IAAI,CAACmB;MAC5B,CACJ,CAAC;IACL,CAAC,CAAC,OAAMN,KAAK,EAAC;MACVC,OAAO,CAACD,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;IACjF;IACA;IACA;IACA;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BxB,OAAA;MAAAwB,QAAA,GAAI,iOAA2C,eAAAxB,OAAA;QAAMuB,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAErB,IAAI,CAACsB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChG7B,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACvBd,OAAO,CAACoB,MAAM,GAAG,CAAC,GAChBpB,OAAO,CAACqB,GAAG,CAAC,CAACC,KAAK,EAAEC,CAAC,kBACjBjC,OAAA;QACIuB,SAAS,EAAC,aAAa;QAEvBW,OAAO,EAAEA,CAAA,KAAM;UAACf,eAAe,CAACa,KAAK,CAAC;QAAA,CAAE;QAAAR,QAAA,EAEvCQ,KAAK,CAACG;MAAS,GAHXF,CAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIL,CACR,CAAC,gBAEF7B,OAAA;QAAAwB,QAAA,EAAK;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAC/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA1DKH,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA4DlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}