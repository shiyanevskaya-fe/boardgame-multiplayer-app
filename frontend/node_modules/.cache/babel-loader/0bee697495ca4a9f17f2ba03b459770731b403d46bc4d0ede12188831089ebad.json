{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayerTurn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport \"../styles/PlayerTurn.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerTurn = ({\n  player,\n  roomCode\n}) => {\n  _s();\n  useEffect(() => {\n    const fetchCard = async () => {\n      try {\n        const response_top_card = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\n        console.log(response_top_card);\n      } catch (error) {\n        console.error(\"Ошибка получения верхней карты из колоды\", error);\n      }\n    };\n    fetchCard();\n  }, [roomCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-turn\",\n    children: \"\\u0425\\u043E\\u0434...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerTurn, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PlayerTurn;\nexport default PlayerTurn;\nvar _c;\n$RefreshReg$(_c, \"PlayerTurn\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","PlayerTurn","player","roomCode","_s","fetchCard","response_top_card","get","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayerTurn.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport \"../styles/PlayerTurn.css\";\r\nimport axios from 'axios';\r\n\r\nconst PlayerTurn = ({ player, roomCode }) => {\r\n\r\n    useEffect(() => {\r\n        const fetchCard = async () => {\r\n            try {\r\n              const response_top_card = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\r\n              console.log(response_top_card);\r\n            } catch (error) {\r\n              console.error(\"Ошибка получения верхней карты из колоды\", error);\r\n            }\r\n        };\r\n\r\n        fetchCard();\r\n\r\n    }, [roomCode]);\r\n\r\n    return (\r\n        <div className=\"player-turn\">\r\n            Ход...\r\n        </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default PlayerTurn;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAEzCP,SAAS,CAAC,MAAM;IACZ,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,iBAAiB,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,2CAA2CJ,QAAQ,OAAO,CAAC;QACrGK,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC;MAChC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAClE;IACJ,CAAC;IAEDL,SAAS,CAAC,CAAC;EAEf,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAE7B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEZ,CAAC;AAACZ,EAAA,CArBEH,UAAU;AAAAgB,EAAA,GAAVhB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}