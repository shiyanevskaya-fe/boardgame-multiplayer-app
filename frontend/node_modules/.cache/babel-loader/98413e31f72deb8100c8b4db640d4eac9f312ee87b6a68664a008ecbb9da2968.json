{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles/Game.css';\nimport PlayersCity from './components/PlayersCity.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const pathParts = window.location.pathname.split('/');\n  const roomCode = pathParts[pathParts.length - 1];\n  const [players, setPlayers] = useState(0);\n  const [cards, setCards] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [crusadePoints, setCrusadePoints] = useState(0);\n  const socket = new WebSocket(`ws://192.168.1.68:8000/ws/rooms/${roomCode}/`);\n  socket.onmessage = event => {\n    const data = JSON.parse(event.data);\n    if (data.action === \"player_change\") {\n      setCurrentPlayerId(data.payload.id);\n    } else if (data.action === \"crossroad_update\") {\n      setCards(data.payload);\n    } else if (data.action === \"crusade_points_update\") {\n      setCrusadePoints(data.payload);\n      console.log(data.payload);\n    }\n  };\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const response = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/`);\n        setPlayers(response.data);\n      } catch (error) {\n        console.error(\"Ошибка получения списка игроков\", error);\n      }\n    };\n    fetchPlayers();\n  }, [roomCode]);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const r = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/crossroad/`);\n        setCards(r.data);\n      } catch (error) {\n        console.error(\"Ошибка получения первых трех карт\", error);\n      }\n    };\n    fetchCards();\n  }, [roomCode]);\n  useEffect(() => {\n    const fetchCurrentPlayer = async () => {\n      try {\n        const response_current_player = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/current-player/`);\n        setCurrentPlayerId(response_current_player.data.id);\n      } catch (err) {\n        console.error(\"Не удалось получить текущего игрока:\", err);\n      }\n    };\n    fetchCurrentPlayer();\n  }, [roomCode]);\n  const renderPlayerCities = () => {\n    const cities = [];\n    for (let i = 0; i < players.length; i++) {\n      cities.push(/*#__PURE__*/_jsxDEV(PlayersCity, {\n        player: players[i],\n        isCurrent: players[i].id === currentPlayerId,\n        roomCode: roomCode\n      }, players[i].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this));\n    }\n    return cities;\n  };\n  const renderThreeCards = () => {\n    if (cards.length > 0) {\n      return cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deck-cards\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: card.card_data.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [renderPlayerCities(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"central-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crusade-points\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/crusade_points.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: crusadePoints\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u043E\\u0447\\u043A\\u043E\\u0432 \\u043A\\u0440\\u0435\\u0441\\u0442\\u043E\\u0432\\u043E\\u0433\\u043E\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 46\n            }, this), \" \\u043F\\u043E\\u0445\\u043E\\u0434\\u0430\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cross-road\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/deck_cards.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), renderThreeCards()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"w1CmAfVPWRNM6Tt8NAoC76sH/Js=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","PlayersCity","axios","jsxDEV","_jsxDEV","Game","_s","pathParts","window","location","pathname","split","roomCode","length","players","setPlayers","cards","setCards","currentPlayerId","setCurrentPlayerId","crusadePoints","setCrusadePoints","socket","WebSocket","onmessage","event","data","JSON","parse","action","payload","id","console","log","fetchPlayers","response","get","error","fetchCards","r","fetchCurrentPlayer","response_current_player","err","renderPlayerCities","cities","i","push","player","isCurrent","fileName","_jsxFileName","lineNumber","columnNumber","renderThreeCards","map","card","index","className","children","src","card_data","image","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/Game.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './styles/Game.css';\r\nimport PlayersCity from './components/PlayersCity.js';\r\nimport axios from 'axios';\r\n\r\nconst Game = () => {\r\n    const pathParts = window.location.pathname.split('/');\r\n    const roomCode = pathParts[pathParts.length - 1];\r\n\r\n    const [players, setPlayers] = useState(0);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n\r\n    const [crusadePoints, setCrusadePoints] = useState(0);\r\n\r\n    const socket = new WebSocket(`ws://192.168.1.68:8000/ws/rooms/${roomCode}/`);\r\n\r\n    socket.onmessage = (event) => {\r\n        const data = JSON.parse(event.data);\r\n        if (data.action === \"player_change\") {\r\n            setCurrentPlayerId(data.payload.id);\r\n        }\r\n        else if(data.action === \"crossroad_update\"){\r\n            setCards(data.payload);\r\n        }\r\n        else if(data.action === \"crusade_points_update\"){\r\n            setCrusadePoints(data.payload);\r\n            console.log(data.payload);\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPlayers = async () => {\r\n            try {\r\n                const response = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/`);\r\n                setPlayers(response.data);\r\n            } catch (error) {\r\n                console.error(\"Ошибка получения списка игроков\", error);\r\n            }\r\n        };\r\n\r\n        fetchPlayers();\r\n\r\n    }, [roomCode]);\r\n\r\n    useEffect(() => {\r\n        const fetchCards = async () => {\r\n            try {\r\n                const r = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/crossroad/`);\r\n                setCards(r.data);\r\n            } catch (error) {\r\n                console.error(\"Ошибка получения первых трех карт\", error);\r\n            }\r\n        };\r\n        fetchCards();\r\n    }, [roomCode]);\r\n\r\n    useEffect(() => {\r\n        const fetchCurrentPlayer = async () => {\r\n            try {\r\n                const response_current_player = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/current-player/`);\r\n                setCurrentPlayerId(response_current_player.data.id);\r\n            } catch (err) {\r\n                console.error(\"Не удалось получить текущего игрока:\", err);\r\n            }\r\n        };\r\n        fetchCurrentPlayer();\r\n    }, [roomCode]);\r\n\r\n    const renderPlayerCities = () => {\r\n        const cities = [];\r\n\r\n        for(let i = 0; i < players.length; i++){\r\n            cities.push(\r\n              <PlayersCity\r\n                  key={players[i].id}\r\n                  player={players[i]}\r\n                  isCurrent={players[i].id === currentPlayerId}\r\n                  roomCode={roomCode}\r\n              />\r\n            );\r\n        }\r\n\r\n        return cities;\r\n    };\r\n\r\n    const renderThreeCards = () => {\r\n        if(cards.length > 0){\r\n            return cards.map((card, index) => (\r\n                <div key={index} className='deck-cards'>\r\n                    <img src={card.card_data.image} />\r\n                </div>\r\n            ));\r\n        }\r\n        \r\n    }\r\n  \r\n\r\n    return(\r\n        <div className='Game'>    \r\n            {renderPlayerCities()}        \r\n            <div className='central-panel'>\r\n                <div className='crusade-points'>\r\n                    <img src='/images/crusade_points.png'/>\r\n                    <div className='text-info'>\r\n                        <h3>{crusadePoints}</h3>\r\n                        <div>очков крестового<br/> похода</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className='cross-road'>\r\n                    <img src=\"/images/deck_cards.png\"/>\r\n                    {renderThreeCards()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}