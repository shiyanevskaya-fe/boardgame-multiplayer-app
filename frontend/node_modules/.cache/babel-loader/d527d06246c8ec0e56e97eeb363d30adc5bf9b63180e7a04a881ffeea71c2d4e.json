{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayerTurn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/PlayerTurn.css\";\nimport axios from 'axios';\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerTurn = ({\n  player,\n  roomCode\n}) => {\n  _s();\n  const [handCards, setHandCards] = useState([]);\n  const [hasFullHand, setHasFullHand] = useState(false);\n  const fetchTurn = async () => {\n    try {\n      const response_player_hand = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/hand/`);\n      const playerHand = response_player_hand.data;\n      setHandCards(playerHand);\n      if (playerHand.length === 0) {\n        try {\n          const response_top_card_from_deck = await axios.get(`http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`);\n          const top_card_from_deck = response_top_card_from_deck.data;\n          try {\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/add-hand-card/${top_card_from_deck.id}/`, {\n              'id_card_in_deck': top_card_from_deck.id_card_in_deck\n            });\n          } catch (error) {\n            console.error(\"Ошибка при добавлении карты:\", error);\n          }\n        } catch (error_top_card) {\n          console.error(\"Ошибка при получении верхней карты из колоды:\", error_top_card);\n        }\n      } else if (playerHand.length === 2) {\n        setHasFullHand(true);\n      }\n    } catch (error_hand) {\n      console.error(\"Ошибка получения карт игрока:\", error_hand);\n    }\n  };\n  useEffect(() => {\n    fetchTurn();\n  }, [roomCode, player.id]);\n  const handleCardSelect = async () => {\n    await fetchTurn();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-turn\",\n    children: !hasFullHand ? /*#__PURE__*/_jsxDEV(SelectFromCrossRoad, {\n      roomCode: roomCode,\n      onCardSelect: handleCardSelect,\n      player: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PlayerCardsDisplay, {\n      cards: handCards,\n      roomCode: roomCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(PlayerTurn, \"MxfNFkMieIFqFo0dtzU1Y7qVkGU=\");\n_c = PlayerTurn;\nexport default PlayerTurn;\nvar _c;\n$RefreshReg$(_c, \"PlayerTurn\");","map":{"version":3,"names":["React","useEffect","useState","axios","SelectFromCrossRoad","PlayerCardsDisplay","jsxDEV","_jsxDEV","PlayerTurn","player","roomCode","_s","handCards","setHandCards","hasFullHand","setHasFullHand","fetchTurn","response_player_hand","get","id","playerHand","data","length","response_top_card_from_deck","top_card_from_deck","post","id_card_in_deck","error","console","error_top_card","error_hand","handleCardSelect","className","children","onCardSelect","fileName","_jsxFileName","lineNumber","columnNumber","cards","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayerTurn.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"../styles/PlayerTurn.css\";\r\nimport axios from 'axios';\r\nimport SelectFromCrossRoad from \"./SelectFromCrossRoad.js\";\r\nimport PlayerCardsDisplay from \"./PlayerCardsDisplay.js\";\r\n\r\nconst PlayerTurn = ({ player, roomCode }) => {\r\n    const [handCards, setHandCards] = useState([]);\r\n    const [hasFullHand, setHasFullHand] = useState(false);\r\n\r\n    const fetchTurn = async () => {\r\n        try{\r\n            const response_player_hand = await axios.get(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/hand/`\r\n            );\r\n\r\n            const playerHand = response_player_hand.data;\r\n            setHandCards(playerHand);\r\n\r\n            if(playerHand.length === 0){\r\n                try {\r\n                    const response_top_card_from_deck = await axios.get(\r\n                        `http://192.168.1.68:8000/api/cards/deck/${roomCode}/top/`\r\n                    );\r\n\r\n                    const top_card_from_deck = response_top_card_from_deck.data;\r\n\r\n                    try {\r\n                        await axios.post(\r\n                            `http://192.168.1.68:8000/api/rooms/${roomCode}/players/${player.id}/add-hand-card/${top_card_from_deck.id}/`, {\r\n                                'id_card_in_deck': top_card_from_deck.id_card_in_deck,\r\n                            }\r\n                        ); \r\n                    } catch(error){\r\n                        console.error(\"Ошибка при добавлении карты:\", error);\r\n                    }\r\n                } catch(error_top_card){\r\n                    console.error(\"Ошибка при получении верхней карты из колоды:\", error_top_card);\r\n                }\r\n            } else if(playerHand.length === 2){\r\n                setHasFullHand(true);\r\n            }\r\n        } catch(error_hand){\r\n            console.error(\"Ошибка получения карт игрока:\", error_hand);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTurn();\r\n    }, [roomCode, player.id]);\r\n\r\n    const handleCardSelect = async() => {\r\n        await fetchTurn();\r\n    };\r\n\r\n    return (\r\n        <div className=\"player-turn\">\r\n            {!hasFullHand ? (\r\n                <SelectFromCrossRoad\r\n                    roomCode={roomCode}\r\n                    onCardSelect={handleCardSelect}\r\n                    player={player}\r\n                />\r\n            ) : (\r\n                <PlayerCardsDisplay cards={handCards} roomCode = {roomCode}/>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n  \r\n\r\nexport default PlayerTurn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}