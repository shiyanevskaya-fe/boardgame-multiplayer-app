{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\components\\\\PlayingCards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"../styles/PlayingCards.css\";\nimport axios from 'axios';\nimport PlayingSpecialCards from \"./PlayingSpecialCards.js\";\nimport Modal from 'react-modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst PlayingCards = ({\n  roomCode,\n  card,\n  action,\n  setSelectedCard\n}) => {\n  _s();\n  console.log(card);\n  const player = JSON.parse(localStorage.getItem('player'));\n  const [players, setPlayers] = useState([]);\n  const [isSpecial, setIsSpecial] = useState(false);\n  const [epidemicOptions, setEpidemicOptions] = useState([]);\n  const [showEpidemicModal, setShowEpidemicModal] = useState(false);\n  const [courtCardsOptions, setCourtCardsOptions] = useState([]);\n  const [playerIdWhereKill, setPlayerIdWhereKill] = useState();\n  const [showCourtCardsModal, setShowCourtCardsModal] = useState(false);\n  const [peasantCardsOptions, setPeasantCardsOptions] = useState([]);\n  const [playerIdToMovePeasantCards, setPlayerIdToMovePeasantCards] = useState();\n  const [showPeasantCardsModal, setShowPeasantCardsModal] = useState(false);\n  const [selectedCardsRadio, setSelectedCardsRadio] = useState({});\n  const [playerIdToMove, setPlayerIdToMove] = useState();\n  const [monksOptions, setMonksOptions] = useState([]);\n  const [showMonksModal, setShowMonksModal] = useState(false);\n  const [commonerCrusaderCardsOptions, setCommonerCrusaderCardsOptions] = useState([]);\n  const [showCommonerCrusaderCardsModal, setShowCommonerCrusaderCardsModal] = useState(false);\n  const [availableGroups, setAvailableGroups] = useState([]);\n  const [showAvailableGroupsModal, setShowAvailableGroupsModal] = useState(false);\n  const [nextPlayer, setNextPlayer] = useState([]);\n  const [prevPlayer, setPrevPlayer] = useState([]);\n  const [cardsGroupNeighbors, setCardsGroupNeighbors] = useState();\n  const [showCardsGroupNeighborsModal, setShowCardsGroupNeighborsModal] = useState(false);\n  const [playersWithCourt, setPlayersWithCourt] = useState([]);\n  const [showPlayersWithCourtModal, setShowPlayersWithCourtModal] = useState(false);\n  const [cardDescription, setCardDescription] = useState();\n  const [cardsWomenNeighbors, setCardsWomenNeighbors] = useState([]);\n  const [showCardsWomenNeighborsModal, setShowCardsWomenNeighborsModal] = useState([]);\n  const fetchPlayers = async () => {\n    try {\n      const response_players = await axios.get(`http://192.168.1.68:8000/api/rooms/${roomCode}/players/`);\n      setPlayers(response_players.data);\n    } catch (error) {\n      console.error(\"Ошибка получения пользователей:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPlayers();\n    setCardDescription(card.card_data.description);\n  }, [roomCode, player.id]);\n  useEffect(() => {\n    if (card.card_group_in_deck === \"universal\") {\n      setIsSpecial(true);\n    }\n  }, [card]);\n  const handleClickItem = async pl => {\n    try {\n      const responce = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`, {\n        'player_id': pl.id,\n        'id_card_in_deck': card.id\n      });\n      if (responce.data.epidemics) {\n        setEpidemicOptions(responce.data.epidemics);\n        setShowEpidemicModal(true);\n        return;\n      }\n      if (responce.data.court_cards) {\n        setCourtCardsOptions(responce.data.court_cards);\n        setShowCourtCardsModal(true);\n        setPlayerIdWhereKill(responce.data.player_id_where_kill);\n        return;\n      }\n      if (responce.data.monks) {\n        setMonksOptions(responce.data.monks);\n        setShowMonksModal(true);\n        setPlayerIdToMove(responce.data.player_id_to_move);\n        return;\n      }\n      if (responce.data.commoner_crusader_cards) {\n        setCommonerCrusaderCardsOptions(responce.data.commoner_crusader_cards);\n        setShowCommonerCrusaderCardsModal(true);\n        setPlayerIdToMove(responce.data.player_id_to_move);\n        return;\n      }\n      if (responce.data.available_groups) {\n        setAvailableGroups(responce.data.available_groups);\n        setShowAvailableGroupsModal(true);\n        setNextPlayer(responce.data.neighbors.next_player);\n        setPrevPlayer(responce.data.neighbors.prev_player);\n        return;\n      }\n      if (responce.data.players_with_court) {\n        setPlayersWithCourt(responce.data.players_with_court);\n        setShowPlayersWithCourtModal(true);\n        return;\n      }\n      if (responce.data.cards_women_neighbors) {\n        setCardsWomenNeighbors(responce.data.cards_women_neighbors);\n        setShowCardsWomenNeighborsModal(true);\n        return;\n      }\n    } catch (error) {\n      console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\n    }\n    try {\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты с руки: \", error);\n    }\n    action();\n    setSelectedCard(null);\n  };\n  const handleCureEpidemic = async epidemicId => {\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/cure-epidemic/`, {\n        epidemic_id: epidemicId\n      });\n      setShowEpidemicModal(false);\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при лечении эпидемии:\", error);\n    }\n  };\n  const handleKillCourt = async courtCardId => {\n    setShowCourtCardsModal(false);\n    try {\n      const responce = await axios.post(`\n                http://192.168.1.68:8000/api/rooms/${roomCode}/kill-court/`, {\n        'player_id_where_kill': playerIdWhereKill,\n        'id_card_in_deck': courtCardId,\n        'card_description': cardDescription\n      });\n      if (responce.data.next_player && responce.data.prev_player) {\n        setPeasantCardsOptions([{\n          player_id: responce.data.next_player.id,\n          city_name: responce.data.next_player.city_name,\n          cards: responce.data.next_player.peasant_cards\n        }, {\n          player_id: responce.data.prev_player.id,\n          city_name: responce.data.prev_player.city_name,\n          cards: responce.data.prev_player.peasant_cards\n        }]);\n        setPlayerIdToMovePeasantCards(responce.data.player_id_to_move);\n        setShowPeasantCardsModal(true);\n        return;\n      } else {\n        try {\n          await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n            data: {\n              'player_id': player.id,\n              'id_card_in_deck': card.id\n            }\n          });\n          action();\n          setSelectedCard(null);\n        } catch (error) {\n          console.error(\"Ошибка при удалении карты с руки: \", error);\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты придворного: \", error);\n    }\n  };\n  const handleMovePeasantCard = async (peasantCardId, fromPlayerId) => {\n    setShowPeasantCardsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-peasant-card/`, {\n        'player_id_from_move': fromPlayerId,\n        'player_id_to_move': playerIdToMovePeasantCards,\n        'id_card_in_deck': peasantCardId\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n        action();\n        setSelectedCard(null);\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при перемещении карты простолюдина: \", error);\n    }\n  };\n  const handleMoveCard = async (player_id_from_move, card_id) => {\n    setShowMonksModal(false);\n    setShowCommonerCrusaderCardsModal(false);\n    try {\n      await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-card/`, {\n        'player_id_from_move': player_id_from_move,\n        'player_id_to_move': playerIdToMove,\n        'card_id': card_id\n      });\n      try {\n        await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n          data: {\n            'player_id': player.id,\n            'id_card_in_deck': card.id\n          }\n        });\n        action();\n        setSelectedCard(null);\n      } catch (error) {\n        console.error(\"Ошибка при удалении карты с руки: \", error);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при перещении карты Монах: \", error);\n    }\n  };\n  const handleChoiseCardToMove = async group => {\n    setShowAvailableGroupsModal(false);\n    const response = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/choise-card-to-move/`, {\n      'next_player_id': nextPlayer.player_id,\n      'prev_player_id': prevPlayer.player_id,\n      'card_group': group\n    });\n    if (response.data.cards_group_neighbors) {\n      setCardsGroupNeighbors(response.data.cards_group_neighbors);\n      setShowCardsGroupNeighborsModal(true);\n    }\n  };\n  const handleSwapCards = async (next_player_id, next_player_card_id, prev_player_id, prev_player_card_id) => {\n    await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/swap-cards/`, {\n      'next_player_id': next_player_id,\n      'next_player_card_id': next_player_card_id,\n      'prev_player_id': prev_player_id,\n      'prev_player_card_id': prev_player_card_id\n    });\n    try {\n      await axios.delete(`http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`, {\n        data: {\n          'player_id': player.id,\n          'id_card_in_deck': card.id\n        }\n      });\n      action();\n      setSelectedCard(null);\n    } catch (error) {\n      console.error(\"Ошибка при удалении карты с руки: \", error);\n    }\n  };\n  const handleChoiseCourtKill = async player_id => {\n    setShowPlayersWithCourtModal(false);\n    const responce = await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/choise-court-kill/`, {\n      'player_id': player_id\n    });\n    console.log(\"Данные от бэка:\", responce.data);\n    if (responce.data.court_cards) {\n      setCourtCardsOptions(responce.data.court_cards);\n      setShowCourtCardsModal(true);\n      setPlayerIdWhereKill(responce.data.player_id_where_kill);\n      return;\n    }\n  };\n  if (isSpecial) {\n    return /*#__PURE__*/_jsxDEV(PlayingSpecialCards, {\n      roomCode: roomCode,\n      card: card,\n      setIsSpecial: setIsSpecial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showEpidemicModal,\n      onRequestClose: () => setShowEpidemicModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u044D\\u043F\\u0438\\u0434\\u0435\\u043C\\u0438\\u044E \\u0434\\u043B\\u044F \\u043B\\u0435\\u0447\\u0435\\u043D\\u0438\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }, this), epidemicOptions.map(ep => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCureEpidemic(ep.id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ep.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 17\n        }, this)\n      }, ep.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCourtCardsModal,\n      onRequestClose: () => setShowCourtCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u0438\\u0434\\u0432\\u043E\\u0440\\u043D\\u043E\\u0433\\u043E, \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0443\\u0431\\u0438\\u0442\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }, this), courtCardsOptions.map(court_card => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleKillCourt(court_card.id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: court_card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }, this)\n      }, court_card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showPeasantCardsModal,\n      onRequestClose: () => setShowPeasantCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u043C\\u0443 \\u043F\\u0440\\u043E\\u0441\\u0442\\u043E\\u043B\\u044E\\u0434\\u0438\\u043D\\u0443 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }, this), peasantCardsOptions.map(source => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", source.city_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this), source.cards.map(card => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: source.player_id,\n            value: card.id,\n            onChange: () => {\n              setSelectedCardsRadio(prev => ({\n                ...prev,\n                [source.player_id]: card.id\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 29\n          }, this), card.name]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\n            handleMovePeasantCard(card_id, player_id);\n          });\n          setShowPeasantCardsModal(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u041F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showMonksModal,\n      onRequestClose: () => setShowMonksModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0438\\u0437 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u0433\\u043E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0435\\u043C\\u0430\\u043D\\u0438\\u0442\\u044C \\u041C\\u043E\\u043D\\u0430\\u0445\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 13\n      }, this), monksOptions.map(monk => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoveCard(monk.other_player_id, monk.id_card_in_deck),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: monk.other_player_city_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }, this)\n      }, monk.other_player_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCommonerCrusaderCardsModal,\n      onRequestClose: () => setShowCommonerCrusaderCardsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0440\\u0442\\u0443 \\u043F\\u0440\\u043E\\u0441\\u0442\\u043E\\u043B\\u044E\\u0434\\u0438\\u043D\\u0430 \\u043A\\u0440\\u0435\\u0441\\u0442\\u043E\\u043D\\u043E\\u0441\\u0446\\u0430, \\u043A\\u043E\\u0442\\u043E\\u0440\\u0443\\u044E \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0435\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }, this), commonerCrusaderCardsOptions.map(card => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleMoveCard(card.player_id, card.card_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: card.card_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }, this)\n      }, card.card_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showAvailableGroupsModal,\n      onRequestClose: () => setShowAvailableGroupsModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u043E\\u0441\\u043B\\u043E\\u0432\\u0438\\u0435 \\u0434\\u043B\\u044F \\u043E\\u0431\\u043C\\u0435\\u043D\\u0430 \\u0436\\u0438\\u0442\\u0435\\u043B\\u044F\\u043C\\u0438 \\u043C\\u0435\\u0436\\u0434\\u0443 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u043C\\u0438 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430\\u043C\\u0438 \", prevPlayer.player_city_name, \" \\u0438 \", nextPlayer.player_city_name, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }, this), availableGroups.map((group, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChoiseCardToMove(group.value),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: group.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showCardsGroupNeighborsModal,\n      onRequestClose: () => setShowCardsGroupNeighborsModal(false),\n      children: cardsGroupNeighbors ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u0439 \\u043A\\u0430\\u0440\\u0442\\u0435 \\u0438\\u0437 \\u0441\\u043E\\u0441\\u0435\\u0434\\u043D\\u0438\\u0445 \\u0433\\u043E\\u0440\\u043E\\u0434\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsGroupNeighbors.next_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 25\n          }, this), cardsGroupNeighbors.next_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsGroupNeighbors.next_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsGroupNeighbors.next_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 33\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", cardsGroupNeighbors.prev_player.player_city_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this), cardsGroupNeighbors.prev_player.cards.map(c => /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: cardsGroupNeighbors.prev_player.player_id,\n              value: c.card_id,\n              onChange: () => setSelectedCardsRadio(prev => ({\n                ...prev,\n                [cardsGroupNeighbors.prev_player.player_id]: c.card_id\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 33\n            }, this), c.card_name]\n          }, c.card_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowCardsGroupNeighborsModal(false);\n            const next_player_id = cardsGroupNeighbors.next_player.player_id;\n            const prev_player_id = cardsGroupNeighbors.prev_player.player_id;\n            const next_player_card_id = selectedCardsRadio[next_player_id];\n            const prev_player_card_id = selectedCardsRadio[prev_player_id];\n            if (next_player_id && prev_player_id && next_player_card_id && prev_player_card_id) {\n              handleSwapCards(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id);\n            } else {\n              alert(`next_player_id= ${next_player_id}, prev_player_id=${prev_player_id}, next_player_card_id=${next_player_card_id}, prev_player_card_id=${prev_player_card_id}`);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u041F\\u043E\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u0430\\u043C\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showPlayersWithCourtModal,\n      onRequestClose: () => setShowPlayersWithCourtModal(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0445\\u043E\\u0447\\u0435\\u0448\\u044C \\u0443\\u0431\\u0438\\u0442\\u044C \\u043F\\u0440\\u0438\\u0434\\u0432\\u043E\\u0440\\u043D\\u043E\\u0433\\u043E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }, this), playersWithCourt.map((pl, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChoiseCourtKill(pl.other_player_id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pl.other_player_city_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 17\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playing-cards\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0433\\u043E\\u0440\\u043E\\u0434, \\u0432 \\u043A\\u043E\\u0442\\u043E\\u0440\\u043E\\u043C \\u0445\\u043E\\u0442\\u0438\\u0442\\u0435 \\u0440\\u0430\\u0437\\u044B\\u0433\\u0440\\u0430\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"accent\",\n          children: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 60\n        }, this), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-players\",\n        children: card.card_data.play_only_in_own_city ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-player\",\n          onClick: () => {\n            handleClickItem(player);\n          },\n          children: player.city_name\n        }, player.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 21\n        }, this) : players.length > 0 ? players.map((value, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-player\",\n          onClick: () => {\n            handleClickItem(value);\n          },\n          children: value.city_name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(PlayingCards, \"CCBHiJBpE+1d4LJP1HePQdc2+MQ=\");\n_c = PlayingCards;\nexport default PlayingCards;\nvar _c;\n$RefreshReg$(_c, \"PlayingCards\");","map":{"version":3,"names":["React","useState","useEffect","axios","PlayingSpecialCards","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","setAppElement","PlayingCards","roomCode","card","action","setSelectedCard","_s","console","log","player","JSON","parse","localStorage","getItem","players","setPlayers","isSpecial","setIsSpecial","epidemicOptions","setEpidemicOptions","showEpidemicModal","setShowEpidemicModal","courtCardsOptions","setCourtCardsOptions","playerIdWhereKill","setPlayerIdWhereKill","showCourtCardsModal","setShowCourtCardsModal","peasantCardsOptions","setPeasantCardsOptions","playerIdToMovePeasantCards","setPlayerIdToMovePeasantCards","showPeasantCardsModal","setShowPeasantCardsModal","selectedCardsRadio","setSelectedCardsRadio","playerIdToMove","setPlayerIdToMove","monksOptions","setMonksOptions","showMonksModal","setShowMonksModal","commonerCrusaderCardsOptions","setCommonerCrusaderCardsOptions","showCommonerCrusaderCardsModal","setShowCommonerCrusaderCardsModal","availableGroups","setAvailableGroups","showAvailableGroupsModal","setShowAvailableGroupsModal","nextPlayer","setNextPlayer","prevPlayer","setPrevPlayer","cardsGroupNeighbors","setCardsGroupNeighbors","showCardsGroupNeighborsModal","setShowCardsGroupNeighborsModal","playersWithCourt","setPlayersWithCourt","showPlayersWithCourtModal","setShowPlayersWithCourtModal","cardDescription","setCardDescription","cardsWomenNeighbors","setCardsWomenNeighbors","showCardsWomenNeighborsModal","setShowCardsWomenNeighborsModal","fetchPlayers","response_players","get","data","error","card_data","description","id","card_group_in_deck","handleClickItem","pl","responce","post","epidemics","court_cards","player_id_where_kill","monks","player_id_to_move","commoner_crusader_cards","available_groups","neighbors","next_player","prev_player","players_with_court","cards_women_neighbors","delete","handleCureEpidemic","epidemicId","epidemic_id","handleKillCourt","courtCardId","player_id","city_name","cards","peasant_cards","handleMovePeasantCard","peasantCardId","fromPlayerId","handleMoveCard","player_id_from_move","card_id","handleChoiseCardToMove","group","response","cards_group_neighbors","handleSwapCards","next_player_id","next_player_card_id","prev_player_id","prev_player_card_id","handleChoiseCourtKill","fileName","_jsxFileName","lineNumber","columnNumber","children","isOpen","onRequestClose","map","ep","onClick","name","court_card","source","type","value","onChange","prev","Object","entries","forEach","monk","other_player_id","id_card_in_deck","other_player_city_name","card_name","player_city_name","i","label","c","alert","className","play_only_in_own_city","length","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/components/PlayingCards.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport \"../styles/PlayingCards.css\";\r\nimport axios from 'axios';\r\nimport PlayingSpecialCards from \"./PlayingSpecialCards.js\";\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst PlayingCards = ({roomCode, card, action, setSelectedCard}) => {\r\n    \r\n\r\n    console.log(card);\r\n    const player = JSON.parse(localStorage.getItem('player'));\r\n\r\n    const [players, setPlayers] = useState([]);\r\n    const [isSpecial, setIsSpecial] = useState(false);\r\n\r\n    const [epidemicOptions, setEpidemicOptions] = useState([]);\r\n    const [showEpidemicModal, setShowEpidemicModal] = useState(false);\r\n\r\n    const [courtCardsOptions, setCourtCardsOptions] = useState([]);\r\n    const [playerIdWhereKill, setPlayerIdWhereKill] = useState();\r\n    const [showCourtCardsModal, setShowCourtCardsModal] = useState(false);\r\n\r\n    const [peasantCardsOptions, setPeasantCardsOptions] = useState([]);\r\n    const [playerIdToMovePeasantCards, setPlayerIdToMovePeasantCards] = useState();\r\n    const [showPeasantCardsModal, setShowPeasantCardsModal] = useState(false);\r\n    const [selectedCardsRadio, setSelectedCardsRadio] = useState({});\r\n\r\n    const [playerIdToMove, setPlayerIdToMove] = useState();\r\n\r\n    const [monksOptions, setMonksOptions] = useState([]);\r\n    const [showMonksModal, setShowMonksModal] = useState(false);\r\n\r\n    const [commonerCrusaderCardsOptions, setCommonerCrusaderCardsOptions] = useState([]);\r\n    const [showCommonerCrusaderCardsModal, setShowCommonerCrusaderCardsModal] = useState(false);\r\n    \r\n    const [availableGroups, setAvailableGroups] = useState([]);\r\n    const [showAvailableGroupsModal, setShowAvailableGroupsModal] = useState(false);\r\n    const [nextPlayer, setNextPlayer] = useState([]);\r\n    const [prevPlayer, setPrevPlayer] = useState([]);\r\n\r\n    const [cardsGroupNeighbors, setCardsGroupNeighbors] = useState();\r\n    const [showCardsGroupNeighborsModal, setShowCardsGroupNeighborsModal] = useState(false);\r\n\r\n    const [playersWithCourt, setPlayersWithCourt] = useState([]);\r\n    const [showPlayersWithCourtModal, setShowPlayersWithCourtModal] = useState(false);\r\n\r\n    const [cardDescription, setCardDescription] = useState();\r\n\r\n    const [cardsWomenNeighbors, setCardsWomenNeighbors] = useState([]);\r\n    const [showCardsWomenNeighborsModal, setShowCardsWomenNeighborsModal] = useState([]);\r\n    const fetchPlayers = async() => {\r\n        try {\r\n            const response_players = await axios.get(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/players/`\r\n            );\r\n\r\n            setPlayers(response_players.data);\r\n        } catch(error){\r\n            console.error(\"Ошибка получения пользователей:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPlayers();\r\n        setCardDescription(card.card_data.description);\r\n    }, [roomCode, player.id]);\r\n\r\n    useEffect(() => {\r\n        if (card.card_group_in_deck === \"universal\") {\r\n            setIsSpecial(true);\r\n        }\r\n    }, [card]);\r\n\r\n    const handleClickItem = async(pl) => {\r\n        try {\r\n            const responce = await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/add-played-card/`,{\r\n                    'player_id': pl.id,\r\n                    'id_card_in_deck': card.id,\r\n                }\r\n            );\r\n\r\n            if(responce.data.epidemics){\r\n                setEpidemicOptions(responce.data.epidemics);\r\n                setShowEpidemicModal(true);\r\n                return;\r\n            }\r\n\r\n            if(responce.data.court_cards){\r\n                setCourtCardsOptions(responce.data.court_cards);\r\n                setShowCourtCardsModal(true);\r\n                setPlayerIdWhereKill(responce.data.player_id_where_kill);\r\n                return;\r\n            }\r\n\r\n            if(responce.data.monks){\r\n                setMonksOptions(responce.data.monks);\r\n                setShowMonksModal(true);\r\n                setPlayerIdToMove(responce.data.player_id_to_move);\r\n                return;\r\n            }\r\n\r\n            if(responce.data.commoner_crusader_cards){\r\n                setCommonerCrusaderCardsOptions(responce.data.commoner_crusader_cards);\r\n                setShowCommonerCrusaderCardsModal(true);\r\n                setPlayerIdToMove(responce.data.player_id_to_move);\r\n                return;\r\n            }\r\n\r\n            if(responce.data.available_groups){\r\n                setAvailableGroups(responce.data.available_groups);\r\n                setShowAvailableGroupsModal(true);\r\n                setNextPlayer(responce.data.neighbors.next_player);\r\n                setPrevPlayer(responce.data.neighbors.prev_player);\r\n                return;\r\n            }\r\n\r\n            if(responce.data.players_with_court){\r\n                setPlayersWithCourt(responce.data.players_with_court);\r\n                setShowPlayersWithCourtModal(true);\r\n                return;\r\n            }\r\n\r\n            if(responce.data.cards_women_neighbors){\r\n                setCardsWomenNeighbors(responce.data.cards_women_neighbors);\r\n                setShowCardsWomenNeighborsModal(true);\r\n                return;\r\n            }\r\n        } catch(error){\r\n            console.error(\"Ошибка при добавлении карты в город (при розыгрыше): \", error);\r\n        }\r\n        try {\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n        } catch(error){\r\n            console.error(\"Ошибка при удалении карты с руки: \", error);\r\n        }\r\n        action();\r\n        setSelectedCard(null);\r\n    };\r\n\r\n    const handleCureEpidemic = async (epidemicId) => {\r\n        try {\r\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/cure-epidemic/`, {\r\n                epidemic_id: epidemicId,\r\n            });\r\n\r\n            setShowEpidemicModal(false);\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n            \r\n            action();\r\n            setSelectedCard(null);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при лечении эпидемии:\", error);\r\n        }\r\n    };\r\n\r\n    const handleKillCourt = async (courtCardId) => {\r\n        setShowCourtCardsModal(false);\r\n\r\n        try{\r\n            const responce = await axios.post(`\r\n                http://192.168.1.68:8000/api/rooms/${roomCode}/kill-court/`, \r\n                {\r\n                    'player_id_where_kill': playerIdWhereKill,\r\n                    'id_card_in_deck': courtCardId,\r\n                    'card_description': cardDescription,\r\n                }\r\n            );\r\n\r\n            if(responce.data.next_player && responce.data.prev_player){\r\n                setPeasantCardsOptions([\r\n                    {\r\n                        player_id: responce.data.next_player.id,\r\n                        city_name: responce.data.next_player.city_name,\r\n                        cards: responce.data.next_player.peasant_cards\r\n                    },\r\n                    {\r\n                        player_id: responce.data.prev_player.id,\r\n                        city_name: responce.data.prev_player.city_name,\r\n                        cards: responce.data.prev_player.peasant_cards\r\n                    }\r\n                ]);\r\n                setPlayerIdToMovePeasantCards(responce.data.player_id_to_move);\r\n                setShowPeasantCardsModal(true);\r\n                return;\r\n            }\r\n            else{\r\n                try {\r\n                    await axios.delete(\r\n                        `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                            data: {\r\n                                'player_id': player.id,\r\n                                'id_card_in_deck': card.id,\r\n                            }\r\n                            \r\n                        }\r\n                    );\r\n\r\n                    action();\r\n                    setSelectedCard(null);\r\n                } catch(error){\r\n                    console.error(\"Ошибка при удалении карты с руки: \", error);\r\n                }\r\n            }\r\n        }catch(error){\r\n            console.error(\"Ошибка при удалении карты придворного: \", error);\r\n        }\r\n    };\r\n\r\n    const handleMovePeasantCard = async (peasantCardId, fromPlayerId) => {\r\n        setShowPeasantCardsModal(false);\r\n\r\n        try{\r\n            await axios.post(`http://192.168.1.68:8000/api/rooms/${roomCode}/move-peasant-card/`, {\r\n                'player_id_from_move': fromPlayerId,\r\n                'player_id_to_move': playerIdToMovePeasantCards,\r\n                'id_card_in_deck': peasantCardId,\r\n            });\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n\r\n                action();\r\n                setSelectedCard(null);\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n\r\n        } catch(error){\r\n            console.error(\"Ошибка при перемещении карты простолюдина: \", error);\r\n        }\r\n    };\r\n\r\n    const handleMoveCard = async(player_id_from_move, card_id) => {\r\n        setShowMonksModal(false);\r\n        setShowCommonerCrusaderCardsModal(false);\r\n\r\n        try{\r\n            await axios.post(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/move-card/`,\r\n                {\r\n                    'player_id_from_move': player_id_from_move,\r\n                    'player_id_to_move': playerIdToMove,\r\n                    'card_id': card_id\r\n                }\r\n            );\r\n\r\n            try {\r\n                await axios.delete(\r\n                    `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                        data: {\r\n                            'player_id': player.id,\r\n                            'id_card_in_deck': card.id,\r\n                        }\r\n                        \r\n                    }\r\n                );\r\n\r\n                action();\r\n                setSelectedCard(null);\r\n            } catch(error){\r\n                console.error(\"Ошибка при удалении карты с руки: \", error);\r\n            }\r\n        }catch(error){\r\n            console.error(\"Ошибка при перещении карты Монах: \", error);\r\n        }\r\n    };\r\n\r\n    const handleChoiseCardToMove = async(group) => {\r\n        setShowAvailableGroupsModal(false);\r\n        \r\n        const response = await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/choise-card-to-move/`,\r\n            {\r\n                'next_player_id': nextPlayer.player_id,\r\n                'prev_player_id': prevPlayer.player_id,\r\n                'card_group': group\r\n            }\r\n        );\r\n\r\n        if(response.data.cards_group_neighbors){\r\n            setCardsGroupNeighbors(response.data.cards_group_neighbors);\r\n            setShowCardsGroupNeighborsModal(true);\r\n        }\r\n    };\r\n\r\n    const handleSwapCards = async(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id) => {\r\n        await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/swap-cards/`,\r\n            {\r\n                'next_player_id': next_player_id,\r\n                'next_player_card_id': next_player_card_id,\r\n                'prev_player_id': prev_player_id,\r\n                'prev_player_card_id': prev_player_card_id\r\n            }\r\n        );\r\n\r\n        try {\r\n            await axios.delete(\r\n                `http://192.168.1.68:8000/api/rooms/${roomCode}/player/delete-hand-card/`,{\r\n                    data: {\r\n                        'player_id': player.id,\r\n                        'id_card_in_deck': card.id,\r\n                    }\r\n                    \r\n                }\r\n            );\r\n\r\n            action();\r\n            setSelectedCard(null);\r\n        } catch(error){\r\n            console.error(\"Ошибка при удалении карты с руки: \", error);\r\n        }\r\n    };\r\n\r\n    const handleChoiseCourtKill = async(player_id) => {\r\n        setShowPlayersWithCourtModal(false);\r\n\r\n        const responce = await axios.post(\r\n            `http://192.168.1.68:8000/api/rooms/${roomCode}/choise-court-kill/`,\r\n            {\r\n                'player_id': player_id\r\n            }\r\n        );\r\n\r\n        console.log(\"Данные от бэка:\", responce.data);\r\n\r\n\r\n        if(responce.data.court_cards){\r\n            setCourtCardsOptions(responce.data.court_cards);\r\n            setShowCourtCardsModal(true);\r\n            setPlayerIdWhereKill(responce.data.player_id_where_kill);\r\n            return;\r\n        }\r\n    };\r\n\r\n    if(isSpecial){\r\n        return (\r\n            <PlayingSpecialCards \r\n                roomCode = {roomCode} \r\n                card = {card} \r\n                setIsSpecial = {setIsSpecial}\r\n            />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Modal \r\n        isOpen={showEpidemicModal} \r\n        onRequestClose={() => setShowEpidemicModal(false)}\r\n        >\r\n            <h2>Выберите эпидемию для лечения:</h2>\r\n            {epidemicOptions.map(ep => (\r\n                <button key={ep.id} onClick={() => handleCureEpidemic(ep.id)}>\r\n                <p>{ep.name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showCourtCardsModal} \r\n        onRequestClose={() => setShowCourtCardsModal(false)}\r\n        >\r\n            <h2>Выберите придворного, которого хотите убить:</h2>\r\n            {courtCardsOptions.map(court_card => (\r\n                <button key={court_card.id} onClick={() => handleKillCourt(court_card.id)}>\r\n                <p>{court_card.name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n            isOpen={showPeasantCardsModal} \r\n            onRequestClose={() => setShowPeasantCardsModal(false)}\r\n        >\r\n            <h2>Выберите по одному простолюдину из соседних городов:</h2>\r\n            {peasantCardsOptions.map((source) => (\r\n                <div>\r\n                    <h3>Город: {source.city_name}</h3>\r\n                    {source.cards.map((card)=>(\r\n                        <label key={card.id}>\r\n                            <input \r\n                                type=\"radio\" \r\n                                name={source.player_id} \r\n                                value={card.id}\r\n                                onChange={() => {\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                        ...prev,\r\n                                        [source.player_id]: card.id\r\n                                    }));\r\n                                }}\r\n                            />\r\n                            {card.name}\r\n                        </label>\r\n                    ))}\r\n                        \r\n                </div>\r\n            ))}\r\n            <button \r\n                onClick={() => {\r\n                    Object.entries(selectedCardsRadio).forEach(([player_id, card_id]) => {\r\n                        handleMovePeasantCard(card_id, player_id);\r\n                    });\r\n                    setShowPeasantCardsModal(false);\r\n                }}\r\n            >\r\n                <p>Переместить</p>\r\n            </button>\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showMonksModal} \r\n        onRequestClose={() => setShowMonksModal(false)}\r\n        >\r\n            <h2>Выберите город, из которого хотите переманить Монаха:</h2>\r\n            {monksOptions.map(monk => (\r\n                <button key={monk.other_player_id} onClick={() => handleMoveCard(monk.other_player_id, monk.id_card_in_deck)}>\r\n                <p>{monk.other_player_city_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showCommonerCrusaderCardsModal} \r\n        onRequestClose={() => setShowCommonerCrusaderCardsModal(false)}\r\n        >\r\n            <h2>Выберите карту простолюдина крестоносца, которую хотите переместить:</h2>\r\n            {commonerCrusaderCardsOptions.map(card => (\r\n                <button key={card.card_id} onClick={() => handleMoveCard(card.player_id, card.card_id)}>\r\n                <p>{card.card_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showAvailableGroupsModal} \r\n        onRequestClose={() => setShowAvailableGroupsModal(false)}\r\n        >\r\n            <h2>Выбери сословие для обмена жителями между соседними городами {prevPlayer.player_city_name} и {nextPlayer.player_city_name}:</h2>\r\n            {availableGroups.map((group, i) => (\r\n                <button key={i} onClick={() => handleChoiseCardToMove(group.value)}>\r\n                <p>{group.label}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n\r\n        <Modal \r\n            isOpen={showCardsGroupNeighborsModal} \r\n            onRequestClose={() => setShowCardsGroupNeighborsModal(false)}\r\n        >\r\n            {cardsGroupNeighbors ? (\r\n                <>\r\n                    <h2>Выберите по одной карте из соседних городов:</h2>\r\n                    <div>\r\n                        <h3>Город: {cardsGroupNeighbors.next_player.player_city_name}</h3>\r\n                        {cardsGroupNeighbors.next_player.cards.map(c => (\r\n                            <label key={c.card_id}>\r\n                                <input\r\n                                type=\"radio\"\r\n                                name={cardsGroupNeighbors.next_player.player_id}\r\n                                value={c.card_id}\r\n                                onChange={() =>\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                    ...prev,\r\n                                    [cardsGroupNeighbors.next_player.player_id]: c.card_id\r\n                                    }))\r\n                                }\r\n                                />\r\n                                {c.card_name}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Город: {cardsGroupNeighbors.prev_player.player_city_name}</h3>\r\n                        {cardsGroupNeighbors.prev_player.cards.map(c => (\r\n                            <label key={c.card_id}>\r\n                                <input\r\n                                type=\"radio\"\r\n                                name={cardsGroupNeighbors.prev_player.player_id}\r\n                                value={c.card_id}\r\n                                onChange={() =>\r\n                                    setSelectedCardsRadio(prev => ({\r\n                                    ...prev,\r\n                                    [cardsGroupNeighbors.prev_player.player_id]: c.card_id\r\n                                    }))\r\n                                }\r\n                                />\r\n                                {c.card_name}\r\n                            </label>\r\n                        ))}\r\n                    </div>\r\n                    <button \r\n                        onClick={() => {\r\n                            setShowCardsGroupNeighborsModal(false);\r\n                            const next_player_id = cardsGroupNeighbors.next_player.player_id;\r\n                            const prev_player_id = cardsGroupNeighbors.prev_player.player_id;\r\n\r\n                            const next_player_card_id = selectedCardsRadio[next_player_id];\r\n                            const prev_player_card_id = selectedCardsRadio[prev_player_id];\r\n\r\n                            if (next_player_id && prev_player_id && next_player_card_id && prev_player_card_id) {\r\n                                handleSwapCards(next_player_id, next_player_card_id, prev_player_id, prev_player_card_id);\r\n                            }\r\n                            else{\r\n                                alert(`next_player_id= ${next_player_id}, prev_player_id=${prev_player_id}, next_player_card_id=${next_player_card_id}, prev_player_card_id=${prev_player_card_id}`)\r\n                            }\r\n                        }}\r\n                    >\r\n                        <p>Поменять местами</p>\r\n                    </button>\r\n                </>\r\n            ) : (\r\n                <div>Загрузка данных</div>\r\n            )}\r\n            \r\n        </Modal>\r\n\r\n        <Modal \r\n        isOpen={showPlayersWithCourtModal} \r\n        onRequestClose={() => setShowPlayersWithCourtModal(false)}\r\n        >\r\n            <h2>Выбери город, в котором хочешь убить придворного:</h2>\r\n            {playersWithCourt.map((pl, i) => (\r\n                <button key={i} onClick={() => handleChoiseCourtKill(pl.other_player_id)}>\r\n                <p>{pl.other_player_city_name}</p>\r\n                </button>\r\n            ))}\r\n        </Modal>\r\n          \r\n        <div className='playing-cards'>\r\n            <h2>Выберите город, в котором хотите разыграть <span className='accent'>{card.name}</span>:</h2>\r\n            <div className='list-players'>\r\n                {card.card_data.play_only_in_own_city ? (\r\n                    <div\r\n                    className='item-player'\r\n                    key = {player.id}\r\n                    onClick={() => {handleClickItem(player)}}>\r\n                        {player.city_name}\r\n                    </div>\r\n                ) : (\r\n                    (players.length > 0) ? (\r\n                        players.map((value, i) => (\r\n                            <div \r\n                            className='item-player' \r\n                            key={i}\r\n                            onClick={() => {handleClickItem(value)}}>\r\n                                {value.city_name}\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div>Загрузка данных...</div>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayingCards;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}