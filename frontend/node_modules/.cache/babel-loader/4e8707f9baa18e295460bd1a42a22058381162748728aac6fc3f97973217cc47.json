{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ar33\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\vkr\\\\frontend\\\\src\\\\Connection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport ConnectionScreen from './components/ConnectionScreen.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Connection() {\n  _s();\n  const [roomData, setRoomData] = useState(null);\n  useEffect(() => {\n    console.log(\"Вызывается useEffect\");\n    let hostId = localStorage.getItem('host_id');\n    console.log(\"Текущий hostId\" + hostId);\n\n    // Если нет host_id, создаем новый\n    if (!hostId) {\n      hostId = uuidv4();\n      localStorage.setItem('host_id', hostId);\n      console.log(\"Генерация hostId\" + hostId);\n    }\n\n    // Проверим, есть ли уже комната с таким host_id\n    axios.post('http://127.0.0.1:8000/api/rooms/create/', {\n      host: hostId\n    }).then(response => {\n      console.log(\"Ответ от бэкенда:\", response.data);\n      setRoomData(response.data); // Сохраняем данные комнаты\n    }).catch(error => {\n      console.error(\"Ошибка создания комнаты\", error);\n    });\n  }, []); // useEffect с пустым массивом зависимостей, чтобы запускать только при монтировании компонента\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Connection\",\n    children: roomData ? /*#__PURE__*/_jsxDEV(ConnectionScreen, {\n      roomData: roomData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Connection, \"0P1Qcn9Bf7CCk+IL3CfA7tgD104=\");\n_c = Connection;\nexport default Connection;\nvar _c;\n$RefreshReg$(_c, \"Connection\");","map":{"version":3,"names":["useEffect","useState","axios","v4","uuidv4","ConnectionScreen","jsxDEV","_jsxDEV","Connection","_s","roomData","setRoomData","console","log","hostId","localStorage","getItem","setItem","post","host","then","response","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ar33/OneDrive/Документы/vkr/frontend/src/Connection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ConnectionScreen from './components/ConnectionScreen.js';\r\n\r\nfunction Connection() {\r\n  const [roomData, setRoomData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Вызывается useEffect\");\r\n    let hostId = localStorage.getItem('host_id');\r\n\r\n    console.log(\"Текущий hostId\" + hostId);\r\n    \r\n    // Если нет host_id, создаем новый\r\n    if (!hostId) {\r\n      hostId = uuidv4();\r\n      localStorage.setItem('host_id', hostId);\r\n      console.log(\"Генерация hostId\" + hostId);\r\n    }\r\n\r\n    // Проверим, есть ли уже комната с таким host_id\r\n    axios.post('http://127.0.0.1:8000/api/rooms/create/', { host: hostId })\r\n      .then(response => {\r\n        console.log(\"Ответ от бэкенда:\", response.data);\r\n        setRoomData(response.data);  // Сохраняем данные комнаты\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Ошибка создания комнаты\", error);\r\n      });\r\n  }, []);  // useEffect с пустым массивом зависимостей, чтобы запускать только при монтировании компонента\r\n\r\n  return (\r\n    <div className=\"Connection\">\r\n      {roomData ? (\r\n        <ConnectionScreen roomData={roomData} />\r\n      ) : (\r\n        <p>Создание комнаты...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Connection;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,gBAAgB,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,IAAIC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAE5CJ,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAGC,MAAM,CAAC;;IAEtC;IACA,IAAI,CAACA,MAAM,EAAE;MACXA,MAAM,GAAGV,MAAM,CAAC,CAAC;MACjBW,YAAY,CAACE,OAAO,CAAC,SAAS,EAAEH,MAAM,CAAC;MACvCF,OAAO,CAACC,GAAG,CAAC,kBAAkB,GAAGC,MAAM,CAAC;IAC1C;;IAEA;IACAZ,KAAK,CAACgB,IAAI,CAAC,yCAAyC,EAAE;MAAEC,IAAI,EAAEL;IAAO,CAAC,CAAC,CACpEM,IAAI,CAACC,QAAQ,IAAI;MAChBT,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEQ,QAAQ,CAACC,IAAI,CAAC;MAC/CX,WAAW,CAACU,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE;IAC/B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBhB,QAAQ,gBACPH,OAAA,CAACF,gBAAgB;MAACK,QAAQ,EAAEA;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAExCvB,OAAA;MAAAmB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CApCQD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}